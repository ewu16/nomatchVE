[{"path":"https://ewu16.github.io/obsve/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 obsve authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://ewu16.github.io/obsve/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Emily Wu. Author, maintainer.","code":""},{"path":"https://ewu16.github.io/obsve/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wu E (2025). obsve: Causal Estimand Observational Vaccine Studies. R package version 0.0.0.9000, https://ewu16.github.io/obsve/.","code":"@Manual{,   title = {obsve: Causal Estimand for Observational Vaccine Studies},   author = {Emily Wu},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://ewu16.github.io/obsve/}, }"},{"path":"https://ewu16.github.io/obsve/index.html","id":"robsve","dir":"","previous_headings":"","what":"Causal Estimand for Observational Vaccine Studies","title":"Causal Estimand for Observational Vaccine Studies","text":"Estimate vaccine effectiveness observational studies: matching alternative","code":""},{"path":"https://ewu16.github.io/obsve/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"Causal Estimand for Observational Vaccine Studies","text":"obsve package uses G-computation style estimator compute vaccine efficacy observational vaccine studies. proposed estimator tends produce similar point estimates matching-based estimators efficient.","code":""},{"path":"https://ewu16.github.io/obsve/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Causal Estimand for Observational Vaccine Studies","text":"can install development version obsve like :","code":"# TODO: not yet available on Github  # install.packages(\"devtools\") devtools::install_github(\"ewu16/obsve\")"},{"path":"https://ewu16.github.io/obsve/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Causal Estimand for Observational Vaccine Studies","text":"minimal example shows use obsve obtain cumulative incidence vaccine effectiveness estimates simple simulated data set.","code":"library(obsve) # Set seed for reproducibility  set.seed(1234)  # ------------------------------------------------------------------------------ # Example data head(simdata) #>   ID x1 x2 V D_obs   Y event #> 1  1  1  7 1     2  92     0 #> 2  2  0  7 0    NA 210     0 #> 3  3  0 11 1    35 210     0 #> 4  4  0 10 1     6 210     0 #> 5  5  1 11 0    NA 210     0 #> 6  6  1  7 0    NA  90     0 summary(simdata) #>        ID              x1               x2               V          #>  Min.   :    1   Min.   :0.0000   Min.   : 5.000   Min.   :0.0000   #>  1st Qu.: 2501   1st Qu.:0.0000   1st Qu.: 6.000   1st Qu.:0.0000   #>  Median : 5000   Median :0.0000   Median : 8.000   Median :0.0000   #>  Mean   : 5000   Mean   :0.4989   Mean   : 8.023   Mean   :0.4112   #>  3rd Qu.: 7500   3rd Qu.:1.0000   3rd Qu.:10.000   3rd Qu.:1.0000   #>  Max.   :10000   Max.   :1.0000   Max.   :11.000   Max.   :1.0000   #>                                                                     #>      D_obs              Y           event        #>  Min.   :  1.00   Min.   :  1   Min.   :0.0000   #>  1st Qu.: 11.00   1st Qu.:174   1st Qu.:0.0000   #>  Median : 18.00   Median :210   Median :0.0000   #>  Mean   : 25.78   Mean   :178   Mean   :0.1007   #>  3rd Qu.: 32.00   3rd Qu.:210   3rd Qu.:0.0000   #>  Max.   :206.00   Max.   :210   Max.   :1.0000   #>  NA's   :5888  # ------------------------------------------------------------------------------ # 1. Set input parameters outcome_name <- \"Y\" event_name <- \"event\" trt_name <- \"V\" time_name <- \"D_obs\" adjust_vars <- c(\"x1\", \"x2\")  times <- seq(30, 180, by = 30) censor_time <- max(times) tau <- 14 ci_type <- \"wald\" limit_type <- \"fixed\" n_boot <- 10 alpha <- .05  # ------------------------------------------------------------------------------ # 2. Compute VE estimand at time points   fit1 <- obsve(data = simdata,               outcome_name = outcome_name,               event_name = event_name,               trt_name = trt_name,               time_name = time_name,                adjust_vars = adjust_vars,               marginalizing_dist = \"observed\",               times = times,               censor_time = censor_time,                tau = tau,               ci_type = ci_type,               limit_type =  limit_type,               n_boot = n_boot,                alpha = alpha) #> Bootstrapping... #> Time difference of 1.118621 secs               fit1$estimates #> $risk_0 #>       estimate  wald_lower wald_upper    wald_sd wald_n     boot_sd #> 30  0.01163891 0.009434071 0.01435158 0.10829521     10 0.001216964 #> 60  0.03790915 0.032953093 0.04357699 0.07410618     10 0.002638276 #> 90  0.05857293 0.051160294 0.06698377 0.07303806     10 0.004023603 #> 120 0.06691947 0.058631123 0.07628454 0.07197471     10 0.004524174 #> 150 0.07548793 0.067469021 0.08437368 0.06170547     10 0.004344667 #> 180 0.09576440 0.087153441 0.10512816 0.05290843     10 0.004634959 #>  #> $risk_1 #>        estimate  wald_lower  wald_upper    wald_sd wald_n     boot_sd #> 30  0.006219935 0.004194176 0.009215067 0.20209496     10 0.001340820 #> 60  0.022925618 0.019349244 0.027144726 0.08839716     10 0.002090615 #> 90  0.035346676 0.031133277 0.040106687 0.06698357     10 0.002344481 #> 120 0.044244807 0.040189590 0.048688447 0.05120705     10 0.002257466 #> 150 0.055146409 0.048723349 0.062360696 0.06663807     10 0.003561935 #> 180 0.079293545 0.072961782 0.086123742 0.04595721     10 0.003451767 #>  #> $ve #>      estimate wald_lower wald_upper    wald_sd wald_n    boot_sd #> 30  0.4655914 0.09048845  0.6859935 0.27130449     10 0.16982429 #> 60  0.3952484 0.23517000  0.5218225 0.11981637     10 0.07714911 #> 90  0.3965357 0.25796763  0.5092273 0.10546415     10 0.06403802 #> 120 0.3388351 0.20073908  0.4530709 0.09677939     10 0.06537961 #> 150 0.2694672 0.13936256  0.3799036 0.08362356     10 0.06125330 #> 180 0.1719935 0.04529772  0.2818759 0.07264346     10 0.06007380  #Compute simultaneous CI simul_ci <- simultaneous_ci(fit1, alpha, seed = 1234) simul_ci$estimates #> $risk_0 #>     simul_lower simul_upper simul_n #> 30  0.009165215  0.01477031      10 #> 60  0.032322595  0.04441695      10 #> 90  0.050213244  0.06822440      10 #> 120 0.057569711  0.07766257      10 #> 150 0.066430295  0.08566723      10 #> 180 0.086025769  0.10647707      10 #>  #> $risk_1 #>     simul_lower simul_upper simul_n #> 30  0.003768339  0.01025007      10 #> 60  0.018476983  0.02841433      10 #> 90  0.030076385  0.04150096      10 #> 120 0.039152037  0.04996558      10 #> 150 0.047106597  0.06446557      10 #> 180 0.071325611  0.08806718      10 #>  #> $ve #>     simul_lower simul_upper simul_n #> 30  -0.01154813   0.7176679      10 #> 60   0.19839821   0.5437579      10 #> 90   0.22665417   0.5290992      10 #> 120  0.16984105   0.4734273      10 #> 150  0.11068897   0.3998970      10 #> 180  0.01772634   0.3020329      10  #Make nice dataframes of results estimates_df <- estimates_to_df(fit1$estimates) simul_df <- estimates_to_df(simul_ci$estimates) result_df <- merge(estimates_df, simul_df, all.x = TRUE, sort = FALSE) head(result_df) #>   t0   term    estimate  wald_lower  wald_upper    wald_sd wald_n     boot_sd #> 1 30 risk_0 0.011638913 0.009434071 0.014351585 0.10829521     10 0.001216964 #> 2 30 risk_1 0.006219935 0.004194176 0.009215067 0.20209496     10 0.001340820 #> 3 30     ve 0.465591420 0.090488451 0.685993509 0.27130449     10 0.169824288 #> 4 60 risk_0 0.037909148 0.032953093 0.043576991 0.07410618     10 0.002638276 #> 5 60 risk_1 0.022925618 0.019349244 0.027144726 0.08839716     10 0.002090615 #> 6 60     ve 0.395248394 0.235170003 0.521822487 0.11981637     10 0.077149107 #>    simul_lower simul_upper simul_n #> 1  0.009165215  0.01477031      10 #> 2  0.003768339  0.01025007      10 #> 3 -0.011548133  0.71766788      10 #> 4  0.032322595  0.04441695      10 #> 5  0.018476983  0.02841433      10 #> 6  0.198398207  0.54375787      10  #Plot simultaneous confidence bands  plot_ve_panel(result_df, ci_type = \"simul\") # ------------------------------------------------------------------------------ # 3. Compare results with matching estimator  id_name <- \"ID\" matching_vars <- adjust_vars  matched_cohort <- match_rolling_cohort(data = simdata,                                        outcome_name = outcome_name,                                        trt_name = trt_name,                                        time_name = time_name,                                        id_name = id_name,                                        matching_vars = adjust_vars,                                        replace = FALSE,                                        seed = 5678)  matched_data <- matched_cohort[[1]]   fit_matching <-matching_ve(matched_data = matched_data,                            outcome_name = outcome_name,                            event_name = event_name,                            trt_name = trt_name,                            time_name = time_name,                            method = \"cox\",                            adjust = adjust_vars,                            times = times,                            censor_time = censor_time,                            tau = tau,                            pair_censoring = TRUE,                            separate = TRUE,                            ci_type = ci_type,                            limit_type = limit_type,                            data = simdata,                            id_name = id_name,                            matching_vars = matching_vars,                            replace = FALSE,                             n_boot = n_boot,                            alpha = alpha)  #> Bootstrapping... #> Time difference of 1.479839 secs      ## Proposed and matching based estimators have similar point estimates ##  Proposed has narrower confidence intervals  fit1$estimates #> $risk_0 #>       estimate  wald_lower wald_upper    wald_sd wald_n     boot_sd #> 30  0.01163891 0.009434071 0.01435158 0.10829521     10 0.001216964 #> 60  0.03790915 0.032953093 0.04357699 0.07410618     10 0.002638276 #> 90  0.05857293 0.051160294 0.06698377 0.07303806     10 0.004023603 #> 120 0.06691947 0.058631123 0.07628454 0.07197471     10 0.004524174 #> 150 0.07548793 0.067469021 0.08437368 0.06170547     10 0.004344667 #> 180 0.09576440 0.087153441 0.10512816 0.05290843     10 0.004634959 #>  #> $risk_1 #>        estimate  wald_lower  wald_upper    wald_sd wald_n     boot_sd #> 30  0.006219935 0.004194176 0.009215067 0.20209496     10 0.001340820 #> 60  0.022925618 0.019349244 0.027144726 0.08839716     10 0.002090615 #> 90  0.035346676 0.031133277 0.040106687 0.06698357     10 0.002344481 #> 120 0.044244807 0.040189590 0.048688447 0.05120705     10 0.002257466 #> 150 0.055146409 0.048723349 0.062360696 0.06663807     10 0.003561935 #> 180 0.079293545 0.072961782 0.086123742 0.04595721     10 0.003451767 #>  #> $ve #>      estimate wald_lower wald_upper    wald_sd wald_n    boot_sd #> 30  0.4655914 0.09048845  0.6859935 0.27130449     10 0.16982429 #> 60  0.3952484 0.23517000  0.5218225 0.11981637     10 0.07714911 #> 90  0.3965357 0.25796763  0.5092273 0.10546415     10 0.06403802 #> 120 0.3388351 0.20073908  0.4530709 0.09677939     10 0.06537961 #> 150 0.2694672 0.13936256  0.3799036 0.08362356     10 0.06125330 #> 180 0.1719935 0.04529772  0.2818759 0.07264346     10 0.06007380 fit_matching$estimates #> $risk_0 #>       estimate wald_lower wald_upper    wald_sd wald_n     boot_sd #> 30  0.01086433 0.00815648 0.01445805 0.14765884     10 0.001507189 #> 60  0.04053508 0.03350081 0.04897153 0.10097276     10 0.003924289 #> 90  0.05649753 0.04652049 0.06846067 0.10450349     10 0.005491971 #> 120 0.06531078 0.05476062 0.07772640 0.09561912     10 0.005881248 #> 150 0.07505713 0.06528075 0.08616266 0.07656603     10 0.005372431 #> 180 0.09806306 0.08844019 0.10860822 0.05811174     10 0.005244571 #>  #> $risk_1 #>        estimate  wald_lower wald_upper    wald_sd wald_n     boot_sd #> 30  0.005404227 0.002909659 0.01001601 0.31717449     10 0.001360424 #> 60  0.020934645 0.017843672 0.02454767 0.08311817     10 0.001668298 #> 90  0.034496693 0.027292778 0.04351701 0.12330580     10 0.003871580 #> 120 0.043804930 0.037448874 0.05118241 0.08336632     10 0.003323300 #> 150 0.053254910 0.047982114 0.05907118 0.05602941     10 0.002757195 #> 180 0.075998047 0.065721451 0.08773066 0.07976815     10 0.005442743 #>  #> $ve #>      estimate  wald_lower wald_upper   wald_sd wald_n    boot_sd #> 30  0.5025715 -0.13692217  0.7823641 0.4217569     10 0.19441696 #> 60  0.4835425  0.28522937  0.6268337 0.1658034     10 0.08798692 #> 90  0.3894124  0.09528104  0.5879193 0.2006172     10 0.12109698 #> 120 0.3292849  0.09653917  0.5020716 0.1519866     10 0.09736560 #> 150 0.2904750  0.11654438  0.4301630 0.1118619     10 0.07610239 #> 180 0.2250084  0.02436008  0.3843918 0.1174723     10 0.08596516"},{"path":"https://ewu16.github.io/obsve/reference/add_ve.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate VE based on risk_0 and risk_1 — add_ve","title":"Calculate VE based on risk_0 and risk_1 — add_ve","text":"function computes VE proportion reduction risk due vaccination (ie. VE = 1 - risk_0 / risk_1)","code":""},{"path":"https://ewu16.github.io/obsve/reference/add_ve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate VE based on risk_0 and risk_1 — add_ve","text":"","code":"add_ve(psi_bar)"},{"path":"https://ewu16.github.io/obsve/reference/add_ve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate VE based on risk_0 and risk_1 — add_ve","text":"psi_bar named numeric vector containing point estimates risk_0, risk_1","code":""},{"path":"https://ewu16.github.io/obsve/reference/add_ve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate VE based on risk_0 and risk_1 — add_ve","text":"named numeric vector containing point estimates risk_0, risk_1, ve","code":""},{"path":"https://ewu16.github.io/obsve/reference/clean_matched_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get analysis matched dataset from matched cohort — clean_matched_data","title":"Get analysis matched dataset from matched cohort — clean_matched_data","text":"function modifies original matched data, preparing use analysis. Namely, includes (requested) censoring matched pairs time unvaccinated individual's vaccination creating outcome time matching index date endpoint restricting matched  pairs individuals eligible tau days matching index date","code":""},{"path":"https://ewu16.github.io/obsve/reference/clean_matched_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get analysis matched dataset from matched cohort — clean_matched_data","text":"","code":"clean_matched_data(   matched_data,   outcome_name,   event_name,   trt_name,   time_name,   tau,   pair_censoring = TRUE )"},{"path":"https://ewu16.github.io/obsve/reference/clean_matched_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get analysis matched dataset from matched cohort — clean_matched_data","text":"matched_data data frame representing matched cohort outcome_name Character string representing original outcome variable  matched_data event_name Character string representing original event variable matched_data trt_name Character string representing original vaccination status variable matched_data time_name Character string representing original vaccination time variable matched_data tau time excluded vaccination allow building immunity pair_censoring Logical indicate matched pairs censored unvaccinated pair becomes vaccinated.","code":""},{"path":"https://ewu16.github.io/obsve/reference/clean_matched_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get analysis matched dataset from matched cohort — clean_matched_data","text":"data frame representing analysis-eligible matched dataset (subset matched data). Contains variables matched_data, plus following variables <event_name>_d Event variable adjusting pair_censoring <outcome_name>_matched Outcome variable adjusting pair_censoring T_d Time endpoint matched index date (adjusted pair_censoring requested)","code":""},{"path":"https://ewu16.github.io/obsve/reference/compute_boot_ci.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Wald or percentile bootstrapped confidence interval — compute_boot_ci","title":"Compute Wald or percentile bootstrapped confidence interval — compute_boot_ci","text":"Internally calls compute_wald_ci() /compute_percentile_ci() depending value ci_type","code":""},{"path":"https://ewu16.github.io/obsve/reference/compute_boot_ci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Wald or percentile bootstrapped confidence interval — compute_boot_ci","text":"","code":"compute_boot_ci(   x,   boot_x,   ci_type,   alpha = 0.05,   transform = NULL,   z_star = NULL )  compute_wald_ci(x, boot_x, alpha = 0.05, transform, z_star = NULL)  compute_percentile_ci(boot_x, alpha = 0.05)"},{"path":"https://ewu16.github.io/obsve/reference/compute_boot_ci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Wald or percentile bootstrapped confidence interval — compute_boot_ci","text":"x numeric vector point estimates boot_x matrix bootstrapped estimates rows bootstrap iterations columns time points interest. ci_type Character string indicating type confidence interval return (\"wald\", \"percentile\", \"\") alpha Significance level used compute confidence intervals. Confidence intervals nominal level 1 - alpha. transform ci_type = \"wald\", character string indicating scale compute Wald confidence intervals transformed back original scale. Options logit transformation log(x/(1-x)) log_ve transformation log(1-x). z_star ci_type = \"wald\", specific critical value used compute Wald confidence intervals (assumed positive). used, alpha argument ignored.","code":""},{"path":"https://ewu16.github.io/obsve/reference/compute_boot_ci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Wald or percentile bootstrapped confidence interval — compute_boot_ci","text":"matrix containing lower upper confidence intervals relevant bootstrap standard errors.","code":""},{"path":"https://ewu16.github.io/obsve/reference/compute_cox_ve.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the marginal cumulative incidence in the treated and untreated groups based on Cox model(s) — compute_cox_ve","title":"Get the marginal cumulative incidence in the treated and untreated groups based on Cox model(s) — compute_cox_ve","text":"function uses Cox model predict marginal cumulative incidence endpoint t0 days vaccination. marginal cumulative incidence computed predicting individual survival probabilities averaging predictions everyone treatment group.","code":""},{"path":"https://ewu16.github.io/obsve/reference/compute_cox_ve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the marginal cumulative incidence in the treated and untreated groups based on Cox model(s) — compute_cox_ve","text":"","code":"compute_cox_ve(   adata,   adata_outcome_name,   adata_event_name,   adata_trt_name,   adjust,   times,   censor_time,   separate = TRUE,   return_models = TRUE )"},{"path":"https://ewu16.github.io/obsve/reference/compute_cox_ve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the marginal cumulative incidence in the treated and untreated groups based on Cox model(s) — compute_cox_ve","text":"adata data frame represents analysis data set clinical trial. adata_outcome_name Character string specifying time event variable adata. time time event vaccination/matched index date adata_event_name Character string specifying event variable adata adata_trt_name Character string specifying treatment variable adata adjust method = \"cox\", formula  character vector containing names covariates matched_data adjust . times numeric vector containing times (relative time vaccination) return cumulative incidence estimates. censor_time time vaccinated individuals censored model fitting. default, set max(times). separate TRUE, models fit treated untreated groups separately. return_models Logical value: fitted survival models returned?","code":""},{"path":"https://ewu16.github.io/obsve/reference/compute_cox_ve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the marginal cumulative incidence in the treated and untreated groups based on Cox model(s) — compute_cox_ve","text":"list containing following: estimates matrix estimates. columns matrix cumulative incidence/VE terms rows requested time points evaluation. models return_models = TRUE, models used compute risk VE","code":""},{"path":"https://ewu16.github.io/obsve/reference/compute_km_ve.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the marginal cumulative incidence in the treated and untreated groups based on Kaplan Meier estimation. — compute_km_ve","title":"Get the marginal cumulative incidence in the treated and untreated groups based on Kaplan Meier estimation. — compute_km_ve","text":"Get marginal cumulative incidence treated untreated groups based Kaplan Meier estimation.","code":""},{"path":"https://ewu16.github.io/obsve/reference/compute_km_ve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the marginal cumulative incidence in the treated and untreated groups based on Kaplan Meier estimation. — compute_km_ve","text":"","code":"compute_km_ve(   adata,   adata_outcome_name,   adata_event_name,   adata_trt_name,   times,   return_models = TRUE )"},{"path":"https://ewu16.github.io/obsve/reference/compute_km_ve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the marginal cumulative incidence in the treated and untreated groups based on Kaplan Meier estimation. — compute_km_ve","text":"adata data frame represents analysis data set clinical trial. adata_outcome_name Character string specifying time event variable adata. time time event vaccination/matched index date adata_event_name Character string specifying event variable adata adata_trt_name Character string specifying treatment variable adata times numeric vector containing times (relative time vaccination) return cumulative incidence estimates. return_models Logical value: fitted survival models returned?","code":""},{"path":"https://ewu16.github.io/obsve/reference/compute_km_ve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the marginal cumulative incidence in the treated and untreated groups based on Kaplan Meier estimation. — compute_km_ve","text":"list containing following: estimates matrix estimates. columns matrix cumulative incidence/VE terms rows requested time points evaluation. models return_models = TRUE, models used compute risk VE","code":""},{"path":"https://ewu16.github.io/obsve/reference/compute_marginal_ve.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the marginal cumulative incidence in the treated and untreated groups based on a Cox model or Kaplan Meier curve. — compute_marginal_ve","title":"Get the marginal cumulative incidence in the treated and untreated groups based on a Cox model or Kaplan Meier curve. — compute_marginal_ve","text":"#' @description Internally calls compute_cox_ve() compute_km_ve() depending value method","code":""},{"path":"https://ewu16.github.io/obsve/reference/compute_marginal_ve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the marginal cumulative incidence in the treated and untreated groups based on a Cox model or Kaplan Meier curve. — compute_marginal_ve","text":"","code":"compute_marginal_ve(   adata,   adata_outcome_name,   adata_event_name,   adata_trt_name,   times,   method,   adjust = NULL,   censor_time = max(times),   separate = TRUE,   return_models = TRUE )"},{"path":"https://ewu16.github.io/obsve/reference/compute_marginal_ve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the marginal cumulative incidence in the treated and untreated groups based on a Cox model or Kaplan Meier curve. — compute_marginal_ve","text":"adata data frame represents analysis data set clinical trial. adata_outcome_name Character string specifying time event variable adata. time time event vaccination/matched index date adata_event_name Character string specifying event variable adata adata_trt_name Character string specifying treatment variable adata times numeric vector containing times (relative time vaccination) return cumulative incidence estimates. method Character string specifying method survival estimation (\"cox\" cox proportional hazards model \"km\" kaplan meier estimation) adjust method = \"cox\", formula  character vector containing names covariates matched_data adjust . censor_time time vaccinated individuals censored model fitting. default, set max(times). separate TRUE, models fit treated untreated groups separately. return_models Logical value: fitted survival models returned?","code":""},{"path":"https://ewu16.github.io/obsve/reference/compute_marginal_ve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the marginal cumulative incidence in the treated and untreated groups based on a Cox model or Kaplan Meier curve. — compute_marginal_ve","text":"list containing following: estimates matrix estimates. columns matrix cumulative incidence/VE terms rows requested time points evaluation. models return_models = TRUE, models used compute risk VE","code":""},{"path":"https://ewu16.github.io/obsve/reference/compute_psi_bar.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute overall cumulative incidence psi_bar via marginalization — compute_psi_bar","title":"Compute overall cumulative incidence psi_bar via marginalization — compute_psi_bar","text":"function marginalizes psi_v(t0; d, x) estimated pre-specified marginalizing distributions","code":""},{"path":"https://ewu16.github.io/obsve/reference/compute_psi_bar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute overall cumulative incidence psi_bar via marginalization — compute_psi_bar","text":"","code":"compute_psi_bar(psi_d, gp_list)"},{"path":"https://ewu16.github.io/obsve/reference/compute_psi_bar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute overall cumulative incidence psi_bar via marginalization — compute_psi_bar","text":"psi_d data frame containing estimates psi_v(t0; d, x). Data frame contain columns risk_0, risk_1 representing psi_0(t0; d, x) psi_1(t0; d, x) respectively. gp_list list containing marginalizing distributions #TODO: assumptions gp_list","code":""},{"path":"https://ewu16.github.io/obsve/reference/compute_psi_bar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute overall cumulative incidence psi_bar via marginalization — compute_psi_bar","text":"named numeric vector containing point estimates risk_0, risk_1","code":""},{"path":"https://ewu16.github.io/obsve/reference/compute_psi_d.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute day- and covariate- specific risks psi_v(t0; d, x) at a specific time point — compute_psi_d","title":"Compute day- and covariate- specific risks psi_v(t0; d, x) at a specific time point — compute_psi_d","text":"Given fitted survival models, compute estimates psi_v(t0; d, x) d,x interest given timepoint t0","code":""},{"path":"https://ewu16.github.io/obsve/reference/compute_psi_d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute day- and covariate- specific risks psi_v(t0; d, x) at a specific time point — compute_psi_d","text":"","code":"compute_psi_d(fit_0, fit_1, time_name, t0, tau, gp_list)"},{"path":"https://ewu16.github.io/obsve/reference/compute_psi_d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute day- and covariate- specific risks psi_v(t0; d, x) at a specific time point — compute_psi_d","text":"fit_0 fitted survival model unvaccinated group fit_1 fitted survival model vaccinated group time_name Character string specifying name vaccination time variable data. Vaccination time NA never received vaccine follow-. t0 timepoint cumulative incidence evaluated tau time excluded vaccination allow building immunity gp_list List marginalizing distributions. Used determine x, d used prediction","code":""},{"path":"https://ewu16.github.io/obsve/reference/compute_psi_d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute day- and covariate- specific risks psi_v(t0; d, x) at a specific time point — compute_psi_d","text":"data frame containing predicted risk (d,x) interest vaccine vaccine","code":""},{"path":"https://ewu16.github.io/obsve/reference/compute_ve.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute proposed causal VE estimand given the fitted survival models at various time points of interest — compute_ve","title":"Compute proposed causal VE estimand given the fitted survival models at various time points of interest — compute_ve","text":"compute_ve() returns VE estimates multiple time points. function wrapper around compute_ve_t0().","code":""},{"path":"https://ewu16.github.io/obsve/reference/compute_ve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute proposed causal VE estimand given the fitted survival models at various time points of interest — compute_ve","text":"","code":"compute_ve(fit_0, fit_1, time_name, times, tau, gp_list)"},{"path":"https://ewu16.github.io/obsve/reference/compute_ve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute proposed causal VE estimand given the fitted survival models at various time points of interest — compute_ve","text":"fit_0 fitted survival model unvaccinated group fit_1 fitted survival model vaccinated group time_name Character string specifying name vaccination time variable data. Vaccination time NA never received vaccine follow-. times numeric vector containing times (relative time vaccination) return cumulative incidence estimates. tau time excluded vaccination allow building immunity gp_list List marginalizing distributions. Used determine x, d used prediction","code":""},{"path":"https://ewu16.github.io/obsve/reference/compute_ve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute proposed causal VE estimand given the fitted survival models at various time points of interest — compute_ve","text":"matrix estimates columns terms risk_0, risk_1, ve rows time points interest.","code":""},{"path":"https://ewu16.github.io/obsve/reference/compute_ve_t0.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute proposed causal VE estimand given the fitted survival models at a single time points of interest — compute_ve_t0","title":"Compute proposed causal VE estimand given the fitted survival models at a single time points of interest — compute_ve_t0","text":"Compute proposed causal VE estimand given fitted survival models single time points interest","code":""},{"path":"https://ewu16.github.io/obsve/reference/compute_ve_t0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute proposed causal VE estimand given the fitted survival models at a single time points of interest — compute_ve_t0","text":"","code":"compute_ve_t0(fit_0, fit_1, time_name, t0, tau, gp_list)"},{"path":"https://ewu16.github.io/obsve/reference/compute_ve_t0.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute proposed causal VE estimand given the fitted survival models at a single time points of interest — compute_ve_t0","text":"fit_0 fitted survival model unvaccinated group fit_1 fitted survival model vaccinated group time_name Character string specifying name vaccination time variable data. Vaccination time NA never received vaccine follow-. t0 timepoint cumulative incidence evaluated tau time excluded vaccination allow building immunity gp_list List marginalizing distributions. Used determine x, d used prediction","code":""},{"path":"https://ewu16.github.io/obsve/reference/compute_ve_t0.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute proposed causal VE estimand given the fitted survival models at a single time points of interest — compute_ve_t0","text":"named numeric vector containing point estimates risk_0, risk_1, ve","code":""},{"path":"https://ewu16.github.io/obsve/reference/estimate_ci.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate bootstrapped confidence intervals for proposed VE estimator — estimate_ci","title":"Estimate bootstrapped confidence intervals for proposed VE estimator — estimate_ci","text":"Estimate bootstrapped confidence intervals proposed VE estimator","code":""},{"path":"https://ewu16.github.io/obsve/reference/estimate_ci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate bootstrapped confidence intervals for proposed VE estimator — estimate_ci","text":"","code":"estimate_ci(   data,   outcome_name,   event_name,   trt_name,   time_name,   adjust_vars,   marginalizing_dist,   times,   censor_time,   tau,   boot_formula_0,   boot_formula_1,   matched_data,   gp_list,   ci_type,   limit_type,   n_boot,   pt_est = NULL,   alpha = 0.05,   return_boot = TRUE,   n_cores = 1 )"},{"path":"https://ewu16.github.io/obsve/reference/estimate_ci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate bootstrapped confidence intervals for proposed VE estimator — estimate_ci","text":"data data frame containing pertinent information VE estimation. outcome_name Character string specifying name outcome variable data. Outcome variable numeric representing follow-time relative study start d0. event_name Character string specifying name event indicator variable data. Event indicator numeric-valued: 1=event, 0=censored. trt_name Character string specifying name vaccination indicator variable data. Vaccination indicator indicator ever receiving vaccine follow-period numeric-valued: 1=yes, 0 = . time_name Character string specifying name vaccination time variable data. Vaccination time NA never received vaccine follow-. adjust_vars character vector containing names variables data adjust . marginalizing_dist Character string describing type estimated day/covariate distributions marginalize . Values \"observed\" \"matched\". Alternatively, pre-specified marginalizing distributions can list 2 dataframes named g_dist p_dist. times numeric vector containing times (relative time vaccination) return cumulative incidence estimates. censor_time time vaccinated individuals censored model fitting. default, set max(times). tau time excluded vaccination allow building immunity boot_formula_0 formula estimating hazards unvaccinated group bootstrap samples (model) boot_formula_1 formula estimating hazards vaccinated group bootstrap samples (model) matched_data data frame representing matched cohort gp_list List two dataframes named g_dist p_dist representing marginalizing distributions use. ci_type Character string indicating type confidence interval return (\"wald\", \"percentile\", \"\") limit_type Character string indicating whether marginalizing distributions interest estimated distributions \"limit\" \"fixed\" sense. prespecified marginalizing_dist, limit_type always fixed. n_boot Number bootstrap replicated used compute confidence intervals pt_est matrix estimates. columns matrix cumulative incidence/VE terms rows requested timepoints evaluation. alpha Significance level used compute confidence intervals. Confidence intervals nominal level 1 - alpha. return_boot Logical value: bootstrap estimates returned? n_cores Number cores use running bootstrapping procedure. Passed mc.cores argument parallel::mclapply. n_cores > 1, parallelizes bootstrapping procedure Unix-like systems (available Windows).","code":""},{"path":"https://ewu16.github.io/obsve/reference/estimate_ci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate bootstrapped confidence intervals for proposed VE estimator — estimate_ci","text":"list containing following: ci_estimates list matrices containing lower upper confidence interval bounds bootstrap standard error term. ci_type = \"wald\", bootstrapped standard errors transformed scale also included. n_success_boot number bootstrap samples used compute confidence interval boot_samples matrix containing estimates bootstrap replications. Rows represent bootstrap iterations, columns term estimated.","code":""},{"path":"https://ewu16.github.io/obsve/reference/estimate_general_ci.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper to estimate generic bootstrapped confidence interval — estimate_general_ci","title":"Helper to estimate generic bootstrapped confidence interval — estimate_general_ci","text":"function computes Wald percentile bootstrapped confidence intervals proposed VE estimator.","code":""},{"path":"https://ewu16.github.io/obsve/reference/estimate_general_ci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper to estimate generic bootstrapped confidence interval — estimate_general_ci","text":"","code":"estimate_general_ci(   one_boot_function_name,   one_boot_args,   ci_type,   n_boot,   pt_est = NULL,   alpha = 0.05,   return_boot = TRUE,   n_cores = 1 )"},{"path":"https://ewu16.github.io/obsve/reference/estimate_general_ci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper to estimate generic bootstrapped confidence interval — estimate_general_ci","text":"one_boot_function_name Character string naming function computes one bootstrap iteration estimates one_boot_args List arguments pass function computes one bootstrap iteration estimations ci_type Character string indicating type confidence interval return (\"wald\", \"percentile\", \"\") n_boot Number bootstrap replicated used compute confidence intervals pt_est matrix estimates. columns matrix cumulative incidence/VE terms rows requested time points evaluation. alpha Significance level used compute confidence intervals. Confidence intervals nominal level 1 - alpha. return_boot Logical value: bootstrap estimates returned? n_cores Number cores use running bootstrapping procedure. Passed mc.cores argument parallel::mclapply. n_cores > 1, parallelizes bootstrapping procedure Unix-like systems (available Windows).","code":""},{"path":"https://ewu16.github.io/obsve/reference/estimate_general_ci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper to estimate generic bootstrapped confidence interval — estimate_general_ci","text":"list containing following: ci_estimates list matrices containing lower upper confidence interval bounds bootstrap standard error term. ci_type = \"wald\", bootstrapped standard errors transformed scale also included. n_success_boot numeric vector number successful bootstrap samples time point.(Success bootstrap samples result non-missing valid point estimates.) boot_samples return_boot = TRUE, list matrices term contain bootstrap estimates rows bootstrap iterations columns time points.","code":""},{"path":"https://ewu16.github.io/obsve/reference/estimate_matching_ci.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate bootstrapped confidence intervals for matching-based VE estimator — estimate_matching_ci","title":"Estimate bootstrapped confidence intervals for matching-based VE estimator — estimate_matching_ci","text":"Estimate bootstrapped confidence intervals matching-based VE estimator","code":""},{"path":"https://ewu16.github.io/obsve/reference/estimate_matching_ci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate bootstrapped confidence intervals for matching-based VE estimator — estimate_matching_ci","text":"","code":"estimate_matching_ci(   matched_data,   outcome_name = outcome_name,   event_name,   trt_name,   time_name,   method,   adjust,   times,   censor_time,   tau,   pair_censoring = pair_censoring,   separate = FALSE,   ci_type = \"wald\",   limit_type = \"fixed\",   data = NULL,   id_name = \"ID\",   matching_vars = NULL,   replace = FALSE,   n_boot = 0,   pt_est = NULL,   alpha = 0.05,   return_boot,   n_cores = 1 )"},{"path":"https://ewu16.github.io/obsve/reference/estimate_matching_ci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate bootstrapped confidence intervals for matching-based VE estimator — estimate_matching_ci","text":"matched_data data frame matched cohort outcome_name Character string specifying name outcome variable data. Outcome variable numeric representing follow-time relative study start d0. event_name Character string specifying name event indicator variable data. Event indicator numeric-valued: 1=event, 0=censored. trt_name Character string specifying name vaccination indicator variable data. Vaccination indicator indicator ever receiving vaccine follow-period numeric-valued: 1=yes, 0 = . time_name Character string specifying name vaccination time variable data. Vaccination time NA never received vaccine follow-. method Character string specifying method survival estimation (\"cox\" cox proportional hazards model \"km\" kaplan meier estimation) adjust method = \"cox\", formula  character vector containing names covariates matched_data adjust . times numeric vector containing times (relative time vaccination) return cumulative incidence estimates. censor_time time vaccinated individuals censored model fitting. default, set max(times). tau time excluded vaccination allow building immunity pair_censoring Logical indicate matched pairs censored unvaccinated pair becomes vaccinated. separate TRUE, models fit treated untreated groups separately. ci_type Character string indicating type confidence interval return (\"wald\", \"percentile\", \"\") limit_type limit_type = \"limit\", matching procedure performed bootstrap iteration. limit_type = \"fixed\"`, bootstrap samples formed original matched data set. data limit_type = \"limit\", original data used constructed matched cohort id_name limit_type = \"limit\", character string representing individual identifier variable  data matching_vars limit_type = \"limit\", character vector containing names variables data match . replace limit_type = \"limit\", logical: matching done replacement? n_boot Number bootstrap replicated used compute confidence intervals pt_est matrix estimates. columns matrix cumulative incidence/VE terms rows requested timepoints evaluation. alpha Significance level used compute confidence intervals. Confidence intervals nominal level 1 - alpha. return_boot Logical value: bootstrap estimates returned? n_cores Number cores use running bootstrapping procedure. Passed mc.cores argument parallel::mclapply. n_cores > 1, parallelizes bootstrapping procedure Unix-like systems (available Windows).","code":""},{"path":"https://ewu16.github.io/obsve/reference/estimate_matching_ci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate bootstrapped confidence intervals for matching-based VE estimator — estimate_matching_ci","text":"list containing following: ci_estimates list matrices containing lower upper confidence interval bounds bootstrap standard error term. ci_type = \"wald\", bootstrapped standard errors transformed scale also included. n_success_boot number bootstrap samples used compute confidence interval boot_samples matrix containing estimates bootstrap replications. Rows represent bootstrap iterations, columns term estimated.","code":""},{"path":"https://ewu16.github.io/obsve/reference/estimates_by_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Reform estimates list to a list arranged by time point rather than term — estimates_by_time","title":"Reform estimates list to a list arranged by time point rather than term — estimates_by_time","text":"Reform estimates list list arranged time point rather term","code":""},{"path":"https://ewu16.github.io/obsve/reference/estimates_by_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reform estimates list to a list arranged by time point rather than term — estimates_by_time","text":"","code":"estimates_by_time(estimates)"},{"path":"https://ewu16.github.io/obsve/reference/estimates_by_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reform estimates list to a list arranged by time point rather than term — estimates_by_time","text":"estimates list matrices cumulative incidences VE. matrix contains point estimate confidence intervals specified term.","code":""},{"path":"https://ewu16.github.io/obsve/reference/estimates_by_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reform estimates list to a list arranged by time point rather than term — estimates_by_time","text":"list matrices time point rows term columns estimates given time point.","code":""},{"path":"https://ewu16.github.io/obsve/reference/estimates_to_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert estimates list to tidy data frame — estimates_to_df","title":"Convert estimates list to tidy data frame — estimates_to_df","text":"Convert estimates list tidy data frame","code":""},{"path":"https://ewu16.github.io/obsve/reference/estimates_to_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert estimates list to tidy data frame — estimates_to_df","text":"","code":"estimates_to_df(estimates)"},{"path":"https://ewu16.github.io/obsve/reference/estimates_to_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert estimates list to tidy data frame — estimates_to_df","text":"estimates list matrices cumulative incidences VE. matrix contains point estimate confidence intervals specified term.","code":""},{"path":"https://ewu16.github.io/obsve/reference/estimates_to_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert estimates list to tidy data frame — estimates_to_df","text":"data frame columns t0 specifying time point term, point estimates, confidence intervals.","code":""},{"path":"https://ewu16.github.io/obsve/reference/fit_model_0.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit survival models to estimate hazards and predict risk — fit_model_0","title":"Fit survival models to estimate hazards and predict risk — fit_model_0","text":"fit_model_0() fits Cox model estimate risk unvaccinated individuals model includes individuals, censoring vaccinated individuals time vaccination TODO: need censor individuals d_max + t0? d_max well defined. fit_model_1() fits Cox model estimate risk vaccinated individuals model includes vaccinated individuals risk tau days vaccination furthermore, individuals censored t0 days vaccination","code":""},{"path":"https://ewu16.github.io/obsve/reference/fit_model_0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit survival models to estimate hazards and predict risk — fit_model_0","text":"","code":"fit_model_0(   data,   outcome_name,   event_name,   trt_name,   time_name,   adjust_vars,   formula_0 = NULL )  fit_model_1(   data,   outcome_name,   event_name,   trt_name,   time_name,   adjust_vars,   censor_time,   tau,   formula_1 = NULL )"},{"path":"https://ewu16.github.io/obsve/reference/fit_model_0.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit survival models to estimate hazards and predict risk — fit_model_0","text":"data data frame containing pertinent information VE estimation. outcome_name Character string specifying name outcome variable data. Outcome variable numeric representing follow-time relative study start d0. event_name Character string specifying name event indicator variable data. Event indicator numeric-valued: 1=event, 0=censored. trt_name Character string specifying name vaccination indicator variable data. Vaccination indicator indicator ever receiving vaccine follow-period numeric-valued: 1=yes, 0 = . time_name Character string specifying name vaccination time variable data. Vaccination time NA never received vaccine follow-. adjust_vars character vector containing names variables data adjust . formula_0 formula pre-fit model estimating hazards unvaccinated group (recommended use power users) censor_time time vaccinated individuals censored model fitting. default, set max(times). tau time excluded vaccination allow building immunity formula_1 formula pre-fit model estimating hazards vaccinated group. (recommended use power users)","code":""},{"path":"https://ewu16.github.io/obsve/reference/fit_model_0.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit survival models to estimate hazards and predict risk — fit_model_0","text":"fitted survival object","code":""},{"path":"https://ewu16.github.io/obsve/reference/get_gp.html","id":null,"dir":"Reference","previous_headings":"","what":"Get empirical probability distributions g(d|x) and p(x) based on input data — get_gp","title":"Get empirical probability distributions g(d|x) and p(x) based on input data — get_gp","text":"Get empirical probability distributions g(d|x) p(x) based input data","code":""},{"path":"https://ewu16.github.io/obsve/reference/get_gp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get empirical probability distributions g(d|x) and p(x) based on input data — get_gp","text":"","code":"get_gp(df, outcome_name, trt_name, time_name, adjust_vars, tau)"},{"path":"https://ewu16.github.io/obsve/reference/get_gp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get empirical probability distributions g(d|x) and p(x) based on input data — get_gp","text":"df data frame representing target population estimated distributions typically, population involves \"analysis-eligible\" subset given data source outcome_name Character string specifying name outcome variable data. Outcome variable numeric representing follow-time relative study start d0. trt_name Character string specifying name vaccination indicator variable data. Vaccination indicator indicator ever receiving vaccine follow-period numeric-valued: 1=yes, 0 = . time_name Character string specifying name vaccination time variable data. Vaccination time NA never received vaccine follow-. adjust_vars character vector containing names variables data adjust . tau time excluded vaccination allow building immunity","code":""},{"path":"https://ewu16.github.io/obsve/reference/get_gp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get empirical probability distributions g(d|x) and p(x) based on input data — get_gp","text":"list following: g_dist data frame containing covariate-conditional day probabilities. Columns include group_name identifying covariate group, <time_name> specifying day, probspecifying covariate-conditional day probability, variables inadjust_vars} \\item{p_dist}{data frame containing covariate probabilities. Columns include group_name identifying covariate group,probspecifying covariate probability, variable inadjust_vars`","code":""},{"path":"https://ewu16.github.io/obsve/reference/get_observed_gp.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the marginalizing distribution in the observed or matched analysis-eligible populations. — get_observed_gp","title":"Estimate the marginalizing distribution in the observed or matched analysis-eligible populations. — get_observed_gp","text":"get_observed_gp returns marginalizing distributions  based original observed data get_matching_gp returns marginalizing distributions based matched-analysis data","code":""},{"path":"https://ewu16.github.io/obsve/reference/get_observed_gp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the marginalizing distribution in the observed or matched analysis-eligible populations. — get_observed_gp","text":"","code":"get_observed_gp(data, outcome_name, trt_name, time_name, adjust_vars, tau)  get_matching_gp(   matched_adata,   outcome_name,   trt_name,   time_name,   adjust_vars,   tau )"},{"path":"https://ewu16.github.io/obsve/reference/get_observed_gp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the marginalizing distribution in the observed or matched analysis-eligible populations. — get_observed_gp","text":"data data frame containing pertinent information VE estimation. outcome_name Character string specifying name outcome variable data. Outcome variable numeric representing follow-time relative study start d0. trt_name Character string specifying name vaccination indicator variable data. Vaccination indicator indicator ever receiving vaccine follow-period numeric-valued: 1=yes, 0 = . time_name Character string specifying name vaccination time variable data. Vaccination time NA never received vaccine follow-. adjust_vars character vector containing names variables data adjust . tau time excluded vaccination allow building immunity matched_adata get_matching_gp, data frame representing matched analysis-eligible population","code":""},{"path":"https://ewu16.github.io/obsve/reference/get_observed_gp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the marginalizing distribution in the observed or matched analysis-eligible populations. — get_observed_gp","text":"list two data frames containing marginalizing distributions returned calls get_gp()","code":""},{"path":"https://ewu16.github.io/obsve/reference/get_one_matching_ve.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute VE point estimate in matched data set — get_one_matching_ve","title":"Compute VE point estimate in matched data set — get_one_matching_ve","text":"First, creates analysis matched data set based matched_data. calls compute_marginal_ve() analysis data set, specifying appropriate outcome treatment arguments.","code":""},{"path":"https://ewu16.github.io/obsve/reference/get_one_matching_ve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute VE point estimate in matched data set — get_one_matching_ve","text":"","code":"get_one_matching_ve(   matched_data,   outcome_name,   event_name,   trt_name,   time_name,   method,   adjust,   times,   censor_time,   tau,   pair_censoring = TRUE,   separate = TRUE,   return_models = TRUE )"},{"path":"https://ewu16.github.io/obsve/reference/get_one_matching_ve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute VE point estimate in matched data set — get_one_matching_ve","text":"matched_data data frame matched cohort outcome_name Character string specifying name outcome variable data. Outcome variable numeric representing follow-time relative study start d0. event_name Character string specifying name event indicator variable data. Event indicator numeric-valued: 1=event, 0=censored. trt_name Character string specifying name vaccination indicator variable data. Vaccination indicator indicator ever receiving vaccine follow-period numeric-valued: 1=yes, 0 = . time_name Character string specifying name vaccination time variable data. Vaccination time NA never received vaccine follow-. method Character string specifying method survival estimation (\"cox\" cox proportional hazards model \"km\" kaplan meier estimation) adjust method = \"cox\", formula  character vector containing names covariates matched_data adjust . times numeric vector containing times (relative time vaccination) return cumulative incidence estimates. censor_time time vaccinated individuals censored model fitting. default, set max(times). tau time excluded vaccination allow building immunity pair_censoring Logical indicate matched pairs censored unvaccinated pair becomes vaccinated. separate TRUE, models fit treated untreated groups separately. return_models Logical value: fitted survival models returned?","code":""},{"path":"https://ewu16.github.io/obsve/reference/get_one_matching_ve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute VE point estimate in matched data set — get_one_matching_ve","text":"object returned compute_marginal_ve()","code":""},{"path":"https://ewu16.github.io/obsve/reference/get_one_ve.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute VE point estimate — get_one_ve","title":"Compute VE point estimate — get_one_ve","text":"function computes point estimates vaccine effectiveness based proposed method. Internally called obsve one_boot_ve.","code":""},{"path":"https://ewu16.github.io/obsve/reference/get_one_ve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute VE point estimate — get_one_ve","text":"","code":"get_one_ve(   data,   outcome_name,   event_name,   trt_name,   time_name,   adjust_vars,   marginalizing_dist,   matched_dist_options,   times,   censor_time,   tau,   formula_0,   formula_1,   return_models = TRUE,   return_gp_list = TRUE,   return_matching = TRUE )"},{"path":"https://ewu16.github.io/obsve/reference/get_one_ve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute VE point estimate — get_one_ve","text":"data data frame containing pertinent information VE estimation. outcome_name Character string specifying name outcome variable data. Outcome variable numeric representing follow-time relative study start d0. event_name Character string specifying name event indicator variable data. Event indicator numeric-valued: 1=event, 0=censored. trt_name Character string specifying name vaccination indicator variable data. Vaccination indicator indicator ever receiving vaccine follow-period numeric-valued: 1=yes, 0 = . time_name Character string specifying name vaccination time variable data. Vaccination time NA never received vaccine follow-. adjust_vars character vector containing names variables data adjust . marginalizing_dist Character string describing type estimated day/covariate distributions marginalize . Values \"observed\" \"matched\". Alternatively, pre-specified marginalizing distributions can list 2 dataframes named g_dist p_dist. matched_dist_options marginalizing_dist == \"matched\", list parameters controlling process creating matched cohort matched analysis dataset marginalizing distributions estimated. List can created matched_dist(). times numeric vector containing times (relative time vaccination) return cumulative incidence estimates. censor_time time vaccinated individuals censored model fitting. default, set max(times). tau time excluded vaccination allow building immunity formula_0 formula pre-fit model estimating hazards unvaccinated group (recommended use power users) formula_1 formula pre-fit model estimating hazards vaccinated group. (recommended use power users) return_models Logical:  survival models returned? return_gp_list Logical: marginalizing distributions returned? return_matching Logical: matched datasets returned? Default TRUE marginalizing_dist = \"matched\" FALSE otherwise.","code":""},{"path":"https://ewu16.github.io/obsve/reference/get_one_ve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute VE point estimate — get_one_ve","text":"list containing following: estimates matrix estimates columns matrix cumulative incidence/VE terms rows requested time points evaluation. model_0, model_1 return_models = TRUE, fitted survival models unvaccinated vaccinated. gp_list return_gp_list = TRUE, list marginalizing distributions used. matched_data return_matching = TRUE, matched cohort matched_adata return_matching = TRUE, analysis-eligible matched cohort","code":""},{"path":"https://ewu16.github.io/obsve/reference/match_adata.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform matching and get matched adata back — match_adata","title":"Perform matching and get matched adata back — match_adata","text":"Perform matching get matched adata back","code":""},{"path":"https://ewu16.github.io/obsve/reference/match_adata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform matching and get matched adata back — match_adata","text":"","code":"match_adata(   data,   outcome_name,   event_name,   trt_name,   time_name,   id_name,   matching_vars,   replace = FALSE,   seed = NULL,   tau,   pair_censoring = TRUE )"},{"path":"https://ewu16.github.io/obsve/reference/match_adata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform matching and get matched adata back — match_adata","text":"data data frame matches sought outcome_name Character string specifying name outcome variable data. Outcome variable numeric representing follow-time relative study start d0. event_name Character string representing original event variable matched_data trt_name Character string specifying name vaccination indicator variable data. Vaccination indicator indicator ever receiving vaccine follow-period numeric-valued: 1=yes, 0 = . time_name Character string specifying name vaccination time variable data. Vaccination time NA never received vaccine follow-. id_name Character string specifying name unique individual identifier data. matching_vars character vector containing names variables data match . replace Logical: matching done replacement? seed Numeric: seed set prior performing random matching tau time excluded vaccination allow building immunity pair_censoring Logical indicate matched pairs censored unvaccinated pair becomes vaccinated.","code":""},{"path":"https://ewu16.github.io/obsve/reference/match_adata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform matching and get matched adata back — match_adata","text":"list containing matched analysis dataset matched cohort","code":""},{"path":"https://ewu16.github.io/obsve/reference/match_rolling_cohort.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform exact 1:1 matching using ","title":"Perform exact 1:1 matching using ","text":"function creates matched cohort based rolling cohort design. Individuals eligible selected unvaccinated \"controls\" unvaccinated endpoint free potential matching date","code":""},{"path":"https://ewu16.github.io/obsve/reference/match_rolling_cohort.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform exact 1:1 matching using ","text":"","code":"match_rolling_cohort(   data,   outcome_name,   trt_name,   time_name,   id_name,   matching_vars,   replace = FALSE,   seed = NULL )"},{"path":"https://ewu16.github.io/obsve/reference/match_rolling_cohort.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform exact 1:1 matching using ","text":"data data frame matches sought outcome_name Character string specifying name outcome variable data. Outcome variable numeric representing follow-time relative study start d0. trt_name Character string specifying name vaccination indicator variable data. Vaccination indicator indicator ever receiving vaccine follow-period numeric-valued: 1=yes, 0 = . time_name Character string specifying name vaccination time variable data. Vaccination time NA never received vaccine follow-. id_name Character string specifying name unique individual identifier data. matching_vars character vector containing names variables data match . replace Logical: matching done replacement? seed Numeric: seed set prior performing random matching","code":""},{"path":"https://ewu16.github.io/obsve/reference/match_rolling_cohort.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform exact 1:1 matching using ","text":"list containing following: matched_data data frame containing matched individuals n_unmatched_cases number vaccinated individuals match found discarded logical vector denoting whether individual source population included matched_cohort","code":""},{"path":"https://ewu16.github.io/obsve/reference/matched_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameters for creating a matched dataset and matched analysis data set — matched_dist","title":"Parameters for creating a matched dataset and matched analysis data set — matched_dist","text":"Parameters creating matched dataset matched analysis data set","code":""},{"path":"https://ewu16.github.io/obsve/reference/matched_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameters for creating a matched dataset and matched analysis data set — matched_dist","text":"","code":"matched_dist(   id_name = \"ID\",   matched_data = NULL,   replace = FALSE,   seed = NULL,   pair_censoring = TRUE )"},{"path":"https://ewu16.github.io/obsve/reference/matched_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameters for creating a matched dataset and matched analysis data set — matched_dist","text":"id_name Character string specifying name unique individual identifier data. matched_data data frame representing matched cohort replace Logical: matching done replacement? seed Numeric: seed set prior performing random matching pair_censoring Logical indicate matched pairs censored unvaccinated pair becomes vaccinated.","code":""},{"path":"https://ewu16.github.io/obsve/reference/matched_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parameters for creating a matched dataset and matched analysis data set — matched_dist","text":"list control parameters","code":""},{"path":"https://ewu16.github.io/obsve/reference/matching_ve.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a matching-based estimator of VE with confidence intervals — matching_ve","title":"Compute a matching-based estimator of VE with confidence intervals — matching_ve","text":"function main function computing matching-based estimator.","code":""},{"path":"https://ewu16.github.io/obsve/reference/matching_ve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a matching-based estimator of VE with confidence intervals — matching_ve","text":"","code":"matching_ve(   matched_data,   outcome_name,   event_name,   trt_name,   time_name,   method,   adjust,   times,   censor_time,   tau,   pair_censoring = TRUE,   separate = TRUE,   ci_type = \"wald\",   limit_type = \"fixed\",   data = NULL,   id_name = \"ID\",   matching_vars = NULL,   replace = FALSE,   n_boot = 0,   alpha = 0.05,   return_models = TRUE,   return_boot = TRUE,   n_cores = 1 )"},{"path":"https://ewu16.github.io/obsve/reference/matching_ve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a matching-based estimator of VE with confidence intervals — matching_ve","text":"matched_data data frame matched cohort outcome_name Character string specifying name outcome variable data. Outcome variable numeric representing follow-time relative study start d0. event_name Character string specifying name event indicator variable data. Event indicator numeric-valued: 1=event, 0=censored. trt_name Character string specifying name vaccination indicator variable data. Vaccination indicator indicator ever receiving vaccine follow-period numeric-valued: 1=yes, 0 = . time_name Character string specifying name vaccination time variable data. Vaccination time NA never received vaccine follow-. method Character string specifying method survival estimation (\"cox\" cox proportional hazards model \"km\" kaplan meier estimation) adjust method = \"cox\", formula  character vector containing names covariates matched_data adjust . times numeric vector containing times (relative time vaccination) return cumulative incidence estimates. censor_time time vaccinated individuals censored model fitting. default, set max(times). tau time excluded vaccination allow building immunity pair_censoring Logical indicate matched pairs censored unvaccinated pair becomes vaccinated. separate TRUE, models fit treated untreated groups separately. ci_type Character string indicating type confidence interval return (\"wald\", \"percentile\", \"\") limit_type limit_type = \"limit\", matching procedure performed bootstrap iteration. limit_type = \"fixed\"`, bootstrap samples formed original matched data set. data limit_type = \"limit\", original data used constructed matched cohort id_name limit_type = \"limit\", character string representing individual identifier variable  data matching_vars limit_type = \"limit\", character vector containing names variables data match . replace limit_type = \"limit\", logical: matching done replacement? n_boot Number bootstrap replicated used compute confidence intervals alpha Significance level used compute confidence intervals. Confidence intervals nominal level 1 - alpha. return_models Logical value: fitted survival models returned? return_boot Logical value: bootstrap estimates returned? n_cores Number cores use running bootstrapping procedure. Passed mc.cores argument parallel::mclapply. n_cores > 1, parallelizes bootstrapping procedure Unix-like systems (available Windows).","code":""},{"path":"https://ewu16.github.io/obsve/reference/matching_ve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a matching-based estimator of VE with confidence intervals — matching_ve","text":"list containing following: estimates list matrices estimates timepoint. Rows matrix terms \"risk_0\", \"risk_1\", \"ve\". Columns matrix gives point estimate confidence intervals specified time point. times timepoints VE evaluated n_success_boot numeric vector number successful bootstrap samples time point.(Success bootstrap samples result non-missing valid point estimates.) boot_samples return_boot = TRUE, list matrices term contain bootstrap estimates rows bootstrap iterations columns time points.","code":""},{"path":"https://ewu16.github.io/obsve/reference/obsve-package.html","id":null,"dir":"Reference","previous_headings":"","what":"obsve: Causal Estimand for Observational Vaccine Studies — obsve-package","title":"obsve: Causal Estimand for Observational Vaccine Studies — obsve-package","text":"Functions estimate vaccine efficacy observational vaccine studies.","code":""},{"path":[]},{"path":"https://ewu16.github.io/obsve/reference/obsve-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"obsve: Causal Estimand for Observational Vaccine Studies — obsve-package","text":"Maintainer: Emily Wu first.last@example.com (ORCID)","code":""},{"path":"https://ewu16.github.io/obsve/reference/obsve.html","id":null,"dir":"Reference","previous_headings":"","what":"Main function to estimate vaccine effectiveness using a G-computation style estimator — obsve","title":"Main function to estimate vaccine effectiveness using a G-computation style estimator — obsve","text":"primary function estimate vaccine effectiveness.","code":""},{"path":"https://ewu16.github.io/obsve/reference/obsve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Main function to estimate vaccine effectiveness using a G-computation style estimator — obsve","text":"","code":"obsve(   data,   outcome_name,   event_name,   trt_name,   time_name,   adjust_vars,   marginalizing_dist,   matched_dist_options = NULL,   times,   censor_time = max(times),   tau = 14,   ci_type = \"wald\",   limit_type = \"fixed\",   n_boot = 0,   alpha = 0.05,   formula_0 = NULL,   formula_1 = NULL,   return_models = TRUE,   return_boot = TRUE,   n_cores = 1 )"},{"path":"https://ewu16.github.io/obsve/reference/obsve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Main function to estimate vaccine effectiveness using a G-computation style estimator — obsve","text":"data data frame containing pertinent information VE estimation. outcome_name Character string specifying name outcome variable data. Outcome variable numeric representing follow-time relative study start d0. event_name Character string specifying name event indicator variable data. Event indicator numeric-valued: 1=event, 0=censored. trt_name Character string specifying name vaccination indicator variable data. Vaccination indicator indicator ever receiving vaccine follow-period numeric-valued: 1=yes, 0 = . time_name Character string specifying name vaccination time variable data. Vaccination time NA never received vaccine follow-. adjust_vars character vector containing names variables data adjust . marginalizing_dist Character string describing type estimated day/covariate distributions marginalize . Values \"observed\" \"matched\". Alternatively, pre-specified marginalizing distributions can list 2 dataframes named g_dist p_dist. matched_dist_options marginalizing_dist == \"matched\", list parameters controlling process creating matched cohort matched analysis dataset marginalizing distributions estimated. List can created matched_dist(). times numeric vector containing times (relative time vaccination) return cumulative incidence estimates. censor_time time vaccinated individuals censored model fitting. default, set max(times). tau time excluded vaccination allow building immunity ci_type Character string indicating type confidence interval return (\"wald\", \"percentile\", \"\") limit_type Character string indicating whether marginalizing distributions interest estimated distributions \"limit\" \"fixed\" sense. prespecified marginalizing_dist, limit_type always fixed. n_boot Number bootstrap replicated used compute confidence intervals alpha Significance level used compute confidence intervals. Confidence intervals nominal level 1 - alpha. formula_0 formula pre-fit model estimating hazards unvaccinated group (recommended use power users) formula_1 formula pre-fit model estimating hazards vaccinated group. (recommended use power users) return_models Logical value: fitted survival models returned? return_boot Logical value: bootstrap estimates returned? n_cores Number cores use running bootstrapping procedure. Passed mc.cores argument parallel::mclapply. n_cores > 1, parallelizes bootstrapping procedure Unix-like systems (available Windows).","code":""},{"path":"https://ewu16.github.io/obsve/reference/obsve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Main function to estimate vaccine effectiveness using a G-computation style estimator — obsve","text":"list. addition information related call/arguments obsve, contains following: estimates list matrices cumulative incidences VE. matrix contains point estimate confidence intervals specified term. gp_list list containing distributions g(d|x) p(x) used marginalization model_0 fit object used predict risk unvaccinated group model_1 fit object used predict risk vaccinated group n_success_boot numeric vector number successful bootstrap samples time point.(Success bootstrap samples result non-missing valid point estimates.) boot_samples return_boot = TRUE, list matrices term contain bootstrap estimates rows bootstrap iterations columns time points.","code":""},{"path":"https://ewu16.github.io/obsve/reference/one_boot_matching.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute one bootstrap replicate of matching-based VE point estimate — one_boot_matching","title":"Compute one bootstrap replicate of matching-based VE point estimate — one_boot_matching","text":"Compute one bootstrap replicate matching-based VE point estimate","code":""},{"path":"https://ewu16.github.io/obsve/reference/one_boot_matching.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute one bootstrap replicate of matching-based VE point estimate — one_boot_matching","text":"","code":"one_boot_matching(   matched_data,   outcome_name,   event_name,   trt_name,   time_name,   method,   adjust,   times,   censor_time,   tau,   pair_censoring = TRUE,   separate = FALSE,   limit_type = \"fixed\",   data = NULL,   id_name = \"ID\",   matching_vars = NULL,   replace = FALSE,   return_boot = TRUE )"},{"path":"https://ewu16.github.io/obsve/reference/one_boot_matching.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute one bootstrap replicate of matching-based VE point estimate — one_boot_matching","text":"matched_data data frame matched cohort outcome_name Character string specifying name outcome variable data. Outcome variable numeric representing follow-time relative study start d0. event_name Character string specifying name event indicator variable data. Event indicator numeric-valued: 1=event, 0=censored. trt_name Character string specifying name vaccination indicator variable data. Vaccination indicator indicator ever receiving vaccine follow-period numeric-valued: 1=yes, 0 = . time_name Character string specifying name vaccination time variable data. Vaccination time NA never received vaccine follow-. method Character string specifying method survival estimation (\"cox\" cox proportional hazards model \"km\" kaplan meier estimation) adjust method = \"cox\", formula  character vector containing names covariates matched_data adjust . times numeric vector containing times (relative time vaccination) return cumulative incidence estimates. censor_time time vaccinated individuals censored model fitting. default, set max(times). tau time excluded vaccination allow building immunity pair_censoring Logical indicate matched pairs censored unvaccinated pair becomes vaccinated. separate TRUE, models fit treated untreated groups separately. limit_type limit_type = \"limit\", matching procedure performed bootstrap iteration. limit_type = \"fixed\"`, bootstrap samples formed original matched data set. data limit_type = \"limit\", original data used constructed matched cohort id_name limit_type = \"limit\", character string representing individual identifier variable  data matching_vars limit_type = \"limit\", character vector containing names variables data match . replace limit_type = \"limit\", logical: matching done replacement? return_boot Logical value: bootstrap estimates returned?","code":""},{"path":"https://ewu16.github.io/obsve/reference/one_boot_matching.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute one bootstrap replicate of matching-based VE point estimate — one_boot_matching","text":"matrix bootstrapped estimates columns matrix cumulative incidence/VE terms rows requested time points evaluation.","code":""},{"path":"https://ewu16.github.io/obsve/reference/one_boot_ve.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute one bootstrap replicate of VE point estimate — one_boot_ve","title":"Compute one bootstrap replicate of VE point estimate — one_boot_ve","text":"function creates bootstrapped sample computes corresponding point estimate","code":""},{"path":"https://ewu16.github.io/obsve/reference/one_boot_ve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute one bootstrap replicate of VE point estimate — one_boot_ve","text":"","code":"one_boot_ve(   data,   outcome_name,   event_name,   trt_name,   time_name,   adjust_vars,   marginalizing_dist,   times,   censor_time,   tau,   boot_formula_0,   boot_formula_1,   matched_data,   gp_list,   limit_type )"},{"path":"https://ewu16.github.io/obsve/reference/one_boot_ve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute one bootstrap replicate of VE point estimate — one_boot_ve","text":"data data frame containing pertinent information VE estimation. outcome_name Character string specifying name outcome variable data. Outcome variable numeric representing follow-time relative study start d0. event_name Character string specifying name event indicator variable data. Event indicator numeric-valued: 1=event, 0=censored. trt_name Character string specifying name vaccination indicator variable data. Vaccination indicator indicator ever receiving vaccine follow-period numeric-valued: 1=yes, 0 = . time_name Character string specifying name vaccination time variable data. Vaccination time NA never received vaccine follow-. adjust_vars character vector containing names variables data adjust . marginalizing_dist Character string describing type estimated day/covariate distributions marginalize . Values \"observed\" \"matched\". Alternatively, pre-specified marginalizing distributions can list 2 dataframes named g_dist p_dist. times numeric vector containing times (relative time vaccination) return cumulative incidence estimates. censor_time time vaccinated individuals censored model fitting. default, set max(times). tau time excluded vaccination allow building immunity boot_formula_0 formula estimating hazards unvaccinated group bootstrap samples (model) boot_formula_1 formula estimating hazards vaccinated group bootstrap samples (model) matched_data data frame representing matched cohort gp_list List two dataframes named g_dist p_dist representing marginalizing distributions use. limit_type Character string indicating whether marginalizing distributions interest estimated distributions \"limit\" \"fixed\" sense. prespecified marginalizing_dist, limit_type always fixed.","code":""},{"path":"https://ewu16.github.io/obsve/reference/one_boot_ve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute one bootstrap replicate of VE point estimate — one_boot_ve","text":"matrix bootstrapped estimates columns matrix cumulative incidence/VE terms rows requested time points evaluation.","code":""},{"path":"https://ewu16.github.io/obsve/reference/plot_ve_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot cumulative incidence/VE estimates — plot_ve_panel","title":"Plot cumulative incidence/VE estimates — plot_ve_panel","text":"Plot cumulative incidence/VE estimates","code":""},{"path":"https://ewu16.github.io/obsve/reference/plot_ve_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot cumulative incidence/VE estimates — plot_ve_panel","text":"","code":"plot_ve_panel(plot_data, ci_type)"},{"path":"https://ewu16.github.io/obsve/reference/plot_ve_panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot cumulative incidence/VE estimates — plot_ve_panel","text":"plot_data dataframe ci_type String indicating type confidence interval plot. Takes values  \"wald\", \"percentile\" \"simul\".","code":""},{"path":"https://ewu16.github.io/obsve/reference/plot_ve_panel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot cumulative incidence/VE estimates — plot_ve_panel","text":"ggplot","code":""},{"path":"https://ewu16.github.io/obsve/reference/predict_from_model_0.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute psi_0(t0; d, x) and psi_1(t0; d,x ), respectively. — predict_from_model_0","title":"Compute psi_0(t0; d, x) and psi_1(t0; d,x ), respectively. — predict_from_model_0","text":"functions compute conditional day- covariate-specific cumulative incidences. predict_from_model_0() calculates psi_0(t0; d, x) using x covariates prediction obtaining survival d + t0 d + tau days predict_from_model_1() calculates psi_1(t0; d, x) using x d covariates prediction obtaining survival t0 days","code":""},{"path":"https://ewu16.github.io/obsve/reference/predict_from_model_0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute psi_0(t0; d, x) and psi_1(t0; d,x ), respectively. — predict_from_model_0","text":"","code":"predict_from_model_0(fit_0, time_name, t0, tau, gp_list)  predict_from_model_1(fit_1, time_name, t0, tau, gp_list)"},{"path":"https://ewu16.github.io/obsve/reference/predict_from_model_0.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute psi_0(t0; d, x) and psi_1(t0; d,x ), respectively. — predict_from_model_0","text":"fit_0 fitted survival model unvaccinated group time_name Character string specifying name vaccination time variable data. Vaccination time NA never received vaccine follow-. t0 timepoint cumulative incidence evaluated tau time excluded vaccination allow building immunity gp_list List marginalizing distributions. Used determine x, d used prediction fit_1 fitted survival model vaccinated group","code":""},{"path":"https://ewu16.github.io/obsve/reference/predict_from_model_0.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute psi_0(t0; d, x) and psi_1(t0; d,x ), respectively. — predict_from_model_0","text":"data frame predictions day covariate groups gp_list","code":""},{"path":"https://ewu16.github.io/obsve/reference/simdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated dataset — simdata","title":"Simulated dataset — simdata","text":"Minimal data set mimicking data observational vaccine study. Used apply/test methods.","code":""},{"path":"https://ewu16.github.io/obsve/reference/simdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated dataset — simdata","text":"","code":"simdata"},{"path":[]},{"path":"https://ewu16.github.io/obsve/reference/simdata.html","id":"simdata","dir":"Reference","previous_headings":"","what":"simdata","title":"Simulated dataset — simdata","text":"data frame 10,000 rows 7 columns: ID Subject identifier x1,x2 Covariates adjust V Indicator ever vaccinated follow-D_obs Day observed vaccination (relative d0) Y Time event days (relative d0) event Event indicator, event = 0 censored","code":""},{"path":"https://ewu16.github.io/obsve/reference/simdata.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Simulated dataset — simdata","text":"Created code","code":""},{"path":"https://ewu16.github.io/obsve/reference/simultaneous_ci.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute simultaneous confidence intervals for timepoints object — simultaneous_ci","title":"Compute simultaneous confidence intervals for timepoints object — simultaneous_ci","text":"Compute simultaneous confidence intervals timepoints object","code":""},{"path":"https://ewu16.github.io/obsve/reference/simultaneous_ci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute simultaneous confidence intervals for timepoints object — simultaneous_ci","text":"","code":"simultaneous_ci(object, alpha, seed = NULL)"},{"path":"https://ewu16.github.io/obsve/reference/simultaneous_ci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute simultaneous confidence intervals for timepoints object — simultaneous_ci","text":"object Object created call obsve() matching_ve() alpha Significance level confidence interval seed Seed reproducibility","code":""},{"path":"https://ewu16.github.io/obsve/reference/simultaneous_ci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute simultaneous confidence intervals for timepoints object — simultaneous_ci","text":"dataframe lower upper simultaneous confidence intervals timepoint","code":""}]
