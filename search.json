[{"path":"https://ewu16.github.io/nomatchVE/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 nomatchVE authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://ewu16.github.io/nomatchVE/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Emily Wu. Author, maintainer.","code":""},{"path":"https://ewu16.github.io/nomatchVE/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wu E (2025). nomatchVE: Estimate Causal Vaccine Effectiveness Observational Studies Without Matching. R package version 0.0.0.9000, https://ewu16.github.io/nomatchVE/.","code":"@Manual{,   title = {nomatchVE: Estimate Causal Vaccine Effectiveness in Observational Studies Without Matching},   author = {Emily Wu},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://ewu16.github.io/nomatchVE/}, }"},{"path":"https://ewu16.github.io/nomatchVE/index.html","id":"rnomatchve","dir":"","previous_headings":"","what":"Estimate Causal Vaccine Effectiveness in Observational Studies Without Matching","title":"Estimate Causal Vaccine Effectiveness in Observational Studies Without Matching","text":"matching alternative efficiently evaluating vaccine effectiveness using observational data","code":""},{"path":"https://ewu16.github.io/nomatchVE/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"Estimate Causal Vaccine Effectiveness in Observational Studies Without Matching","text":"nomatchVE package uses G-computation style estimator compute vaccine effectiveness observational vaccine studies. proposed estimator tends produce similar point estimates matching-based estimators can efficient.","code":""},{"path":"https://ewu16.github.io/nomatchVE/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Estimate Causal Vaccine Effectiveness in Observational Studies Without Matching","text":"can install development version nomatchVE :","code":"# install.packages(\"devtools\") devtools::install_github(\"ewu16/nomatchVE\")"},{"path":"https://ewu16.github.io/nomatchVE/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Estimate Causal Vaccine Effectiveness in Observational Studies Without Matching","text":"minimal example shows use nomatchVE obtain cumulative incidence vaccine effectiveness estimates simple simulated data set.","code":"#Load package library(nomatchVE)  # Example data head(simdata) #>   ID x1 x2 V D_obs   Y event #> 1  1  1  7 1     2  92     0 #> 2  2  0  7 0    NA 210     0 #> 3  3  0 11 1    35 210     0 #> 4  4  0 10 1     6 210     0 #> 5  5  1 11 0    NA 210     0 #> 6  6  1  7 0    NA  90     0 summary(simdata) #>        ID              x1               x2               V          #>  Min.   :    1   Min.   :0.0000   Min.   : 5.000   Min.   :0.0000   #>  1st Qu.: 2501   1st Qu.:0.0000   1st Qu.: 6.000   1st Qu.:0.0000   #>  Median : 5000   Median :0.0000   Median : 8.000   Median :0.0000   #>  Mean   : 5000   Mean   :0.4989   Mean   : 8.023   Mean   :0.4112   #>  3rd Qu.: 7500   3rd Qu.:1.0000   3rd Qu.:10.000   3rd Qu.:1.0000   #>  Max.   :10000   Max.   :1.0000   Max.   :11.000   Max.   :1.0000   #>                                                                     #>      D_obs              Y           event        #>  Min.   :  1.00   Min.   :  1   Min.   :0.0000   #>  1st Qu.: 11.00   1st Qu.:174   1st Qu.:0.0000   #>  Median : 18.00   Median :210   Median :0.0000   #>  Mean   : 25.78   Mean   :178   Mean   :0.1007   #>  3rd Qu.: 32.00   3rd Qu.:210   3rd Qu.:0.0000   #>  Max.   :206.00   Max.   :210   Max.   :1.0000   #>  NA's   :5888 # Compute cumulative incidence  fit1 <- nomatchVE(data = simdata,                   outcome_time = \"Y\",                   outcome_status = \"event\",                   exposure = \"V\",                   exposure_time = \"D_obs\",                    covariates = c(\"x1\", \"x2\"),                   tau = 14,                   eval_times = seq(30, 180, by = 30),                   boot_reps = 10) #> Bootstrapping 10 samples... #> Time difference of 1.496422 secs  #Print results  fit1         #>  #>  Vaccine Effectiveness Estimates  #> ==================================================  #> Call: nomatchVE(data = simdata, outcome_time = \"Y\", outcome_status = \"event\",  #>     exposure = \"V\", exposure_time = \"D_obs\", covariates = c(\"x1\",  #>         \"x2\"), tau = 14, eval_times = seq(30, 180, by = 30),  #>     boot_reps = 10)  #>  #> Result: #>   Timepoint Estimate 95% Wald CI: Lower 95% Wald CI: Upper #> 1        30   0.4655             0.0899             0.6860 #> 2        60   0.3952             0.2359             0.5212 #> 3        90   0.3972             0.2599             0.5090 #> 4       120   0.3395             0.2012             0.4538 #> 5       150   0.2698             0.1387             0.3809 #> 6       180  -0.0359            -0.1923             0.0999 #>  #> Use summary() for more details #> Use plot() to visualize results  #Summary  summary(fit1) #>  #> ======================================================================  #> Vaccine Effectiveness Analysis Summary #> ======================================================================  #>  #> Method:              nomatchVE (G-computation)  #> Evaluation eval_times:    30, 60, 90, 120, 150, 180  #> Tau (delay period):  14  #> Adjusted for:        x1, x2  #>  #> Bootstrap:           10 replicates #> Confidence level:    95 % #> Successful samples:  10-10  (range across timepoints) #>  #> ----------------------------------------------------------------------  #> Vaccine Effectiveness  #> ----------------------------------------------------------------------  #>     estimate wald_lower wald_upper wald_n #> 30    0.4655     0.0899     0.6860     10 #> 60    0.3952     0.2359     0.5212     10 #> 90    0.3972     0.2599     0.5090     10 #> 120   0.3395     0.2012     0.4538     10 #> 150   0.2698     0.1387     0.3809     10 #> 180  -0.0359    -0.1923     0.0999     10 #>  #> ======================================================================  #Plot pointwise intervals  plot(fit1) #Compute simultaneous CI fit1_with_simul <- add_simultaneous_ci(fit1, seed = 1234)  #Plot simultaneous confidence bands  plot(fit1_with_simul , ci_type = \"simul\") # ------------------------------------------------------------------------------ # 3. Compare results with matching estimator    matched_cohort <- match_rolling_cohort(data = simdata,                                        outcome_time = \"Y\",                                        exposure = \"V\",                                        exposure_time = \"D_obs\",                                         matching_vars = c(\"x1\", \"x2\"),                                        id_name = \"ID\",                                        seed = 5678)  matched_data <- matched_cohort[[1]]   fit_matching <-matching_ve(matched_data = matched_data,                            outcome_time = \"Y\",                            outcome_status = \"event\",                            exposure = \"V\",                            exposure_time = \"D_obs\",                             tau = 14,                            eval_times = seq(30, 180, by = 30),                            boot_reps = 10)  #> Bootstrapping 10 samples... #> Time difference of 0.7517531 secs  fit_matching #>  #>  Vaccine Effectiveness Estimates  #> ==================================================  #> Call: matching_ve(matched_data = matched_data, outcome_time = \"Y\",  #>     outcome_status = \"event\", exposure = \"V\", exposure_time = \"D_obs\",  #>     tau = 14, eval_times = seq(30, 180, by = 30), boot_reps = 10)  #>  #> Result: #>   Timepoint Estimate 95% Wald CI: Lower 95% Wald CI: Upper #> 1        30    0.503            -0.1366              0.782 #> 2        60    0.483             0.2854              0.626 #> 3        90    0.389             0.0954              0.587 #> 4       120    0.329             0.0963              0.501 #> 5       150    0.290             0.1163              0.429 #> 6       180    0.225             0.0245              0.384 #>  #> Use summary() for more details #> Use plot() to visualize results  ## Plot matching vs proposed estimator - nomatch tends to have similar point estimates but narrower # confidence intervals compare_ve_fits(fit_matching, fit1, labels = c(\"Matching\", \"nomatch (G-computation)\"))"},{"path":"https://ewu16.github.io/nomatchVE/index.html","id":"issues","dir":"","previous_headings":"","what":"Issues","title":"Estimate Causal Vaccine Effectiveness in Observational Studies Without Matching","text":"encounter bugs specific feature requests, please file issue.","code":""},{"path":"https://ewu16.github.io/nomatchVE/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Estimate Causal Vaccine Effectiveness in Observational Studies Without Matching","text":"use nomatchVE package work, please cite following:","code":"@Manual{,    title = {nomatchVE: Estimate Causal Vaccine Effectiveness in Observational Studies              Without Matching},    author = {Emily Wu},    year = {2025},    note = {R package version 0.0.0.9000,     https://github.com/ewu16/nomatchVE},    url = {https://ewu16.github.io/nomatchVE/},  }"},{"path":"https://ewu16.github.io/nomatchVE/reference/add_simultaneous_ci.html","id":null,"dir":"Reference","previous_headings":"","what":"Add simultaneous confidence intervals to vaccine effectiveness fit — add_simultaneous_ci","title":"Add simultaneous confidence intervals to vaccine effectiveness fit — add_simultaneous_ci","text":"Computes simultaneous confidence intervals, maintain specified coverage level across evaluation timepoints jointly. useful making inferences entire VE curve.","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/add_simultaneous_ci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add simultaneous confidence intervals to vaccine effectiveness fit — add_simultaneous_ci","text":"","code":"add_simultaneous_ci(object, seed = NULL)"},{"path":"https://ewu16.github.io/nomatchVE/reference/add_simultaneous_ci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add simultaneous confidence intervals to vaccine effectiveness fit — add_simultaneous_ci","text":"object object class vefit created nomatchVE() matching_ve(). Must contain evaluations multiple timepoints (length(object$eval_times)  > 0), contain bootstrap samples (keep_boot_samples = TRUE fitting). seed Integer seed random number generation ensure reproducible critical values simultaneous confidence intervals. Default NULL (seed set).","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/add_simultaneous_ci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add simultaneous confidence intervals to vaccine effectiveness fit — add_simultaneous_ci","text":"input vefit object following modifications: estimates matrix gets additional columns describing simultaneous confidence interval bounds construction: simul_lower, simul_upper, simul_n simul_z_star Critical values used term (cuminc_0, cuminc_1, ve) simul_excluded_timepoints Timepoints excluded simultaneous bands due insufficient bootstrap samples","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/add_simultaneous_ci.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add simultaneous confidence intervals to vaccine effectiveness fit — add_simultaneous_ci","text":"Critical values computed using bootstrap covariance structure across timepoints. timepoint 5% missing bootstrap samples, excluded simultaneous band warning issued.","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/add_simultaneous_ci.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add simultaneous confidence intervals to vaccine effectiveness fit — add_simultaneous_ci","text":"","code":"# Fit model with bootstrap samples fit <- nomatchVE(   data = simdata,   outcome_time = \"Y\",   outcome_status = \"event\",   exposure = \"V\",   exposure_time = \"D_obs\",   covariates = c(\"x1\", \"x2\"),   eval_times = seq(30, 180, by = 30),   tau = 14,   boot_reps = 100,   keep_boot_samples = TRUE ) #> Bootstrapping 100 samples... #> Time difference of 33.32416 secs  # Add simultaneous CIs fit_simul <- add_simultaneous_ci(fit, seed = 123)  # Look at results fit_simul$estimates #> $cuminc_0 #>       estimate wald_lower wald_upper wald_n simul_lower simul_upper simul_n #> 30  0.01163891 0.01017118 0.01331560    100 0.009895009  0.01368592     100 #> 60  0.03790915 0.03400866 0.04223743    100 0.033261760  0.04317687     100 #> 90  0.05857293 0.05279345 0.06494174    100 0.051682224  0.06631812     100 #> 120 0.06691947 0.06077506 0.07363638    100 0.059587887  0.07508110     100 #> 150 0.07548793 0.06902192 0.08250600    100 0.067767137  0.08400909     100 #> 180 0.09576440 0.08786829 0.10428896    100 0.086331163  0.10610869     100 #>  #> $cuminc_1 #>        estimate  wald_lower  wald_upper wald_n simul_lower simul_upper simul_n #> 30  0.006221396 0.004208512 0.009188136    100 0.003767239  0.01025784     100 #> 60  0.022928272 0.018800243 0.027936898    100 0.017770525  0.02953799     100 #> 90  0.035306397 0.030107105 0.041365278    100 0.028775443  0.04325362     100 #> 120 0.044201057 0.038467032 0.050744707    100 0.036978175  0.05275748     100 #> 150 0.055121412 0.048595349 0.062466345    100 0.046885519  0.06470580     100 #> 180 0.099205626 0.089270693 0.110112536    100 0.086626102  0.11338513     100 #>  #> $vaccine_effectiveness #>        estimate wald_lower wald_upper wald_n simul_lower simul_upper simul_n #> 30   0.46546592  0.1734213 0.65432610    100  0.07207828   0.6920789     100 #> 60   0.39517839  0.2376575 0.52015114    100  0.18937369   0.5487327     100 #> 90   0.39722334  0.2713054 0.50138274    100  0.23368928   0.5258585     100 #> 120  0.33948883  0.2167159 0.44301818    100  0.18047300   0.4676502     100 #> 150  0.26979833  0.1510724 0.37191997    100  0.11645255   0.3965299     100 #> 180 -0.03593427 -0.1764529 0.08780042    100 -0.21683403   0.1180721     100 #>   # Visualize plot(fit_simul, ci_type = \"simul\") #> Error in loadNamespace(x): there is no package called ‘ggh4x’"},{"path":"https://ewu16.github.io/nomatchVE/reference/clean_matched_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get analysis matched dataset from matched cohort — clean_matched_data","title":"Get analysis matched dataset from matched cohort — clean_matched_data","text":"function modifies original matched data, preparing use analysis. Namely, includes (requested) censoring matched pairs time unvaccinated individual's vaccination creating outcome time matching index date endpoint restricting matched  pairs individuals eligible tau days matching index date","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/clean_matched_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get analysis matched dataset from matched cohort — clean_matched_data","text":"","code":"clean_matched_data(   matched_data,   outcome_time,   outcome_status,   exposure,   exposure_time,   tau )"},{"path":"https://ewu16.github.io/nomatchVE/reference/clean_matched_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get analysis matched dataset from matched cohort — clean_matched_data","text":"matched_data data frame representing matched cohort outcome_time Character string representing original outcome variable  matched_data outcome_status Character string representing original event variable matched_data exposure Character string representing original vaccination status variable matched_data exposure_time Character string representing original vaccination time variable matched_data tau time excluded vaccination allow building immunity","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/clean_matched_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get analysis matched dataset from matched cohort — clean_matched_data","text":"data frame representing analysis-eligible matched dataset (subset matched data). Contains variables matched_data, plus following variables match_<outcome_status> Event variable adjusting pair_censoring match_<outcome_time> Outcome variable adjusting pair_censoring match_T Time endpoint matched index date adjusting pair_censoring","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/compare_ve_fits.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare two vefit objects — compare_ve_fits","title":"Compare two vefit objects — compare_ve_fits","text":"Plot cumulative incidence VE estimates two different methods using colors distinguish methods","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/compare_ve_fits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare two vefit objects — compare_ve_fits","text":"","code":"compare_ve_fits(   fit1,   fit2,   labels = c(\"Method 1\", \"Method 2\"),   ci_type = NULL,   colors = c(\"#F8766D\", \"#00BFC4\") )"},{"path":"https://ewu16.github.io/nomatchVE/reference/compare_ve_fits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare two vefit objects — compare_ve_fits","text":"fit1 vefit object (typically matching_ve) fit2 vefit object (typically nomatchVE) labels Character vector length 2 providing labels two methods. Default c(\"Method 1\", \"Method 2\"). ci_type Character string specifying type confidence interval plot. One \"wald\", \"percentile\", \"simul\". NULL (default), uses CI type fit1. object ci_type = \"\", defaults \"wald\". colors Character vector length 2 providing colors two methods. Default c(\"#F8766D\", \"#00BFC4\") (ggplot2's default red cyan).","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/compare_ve_fits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare two vefit objects — compare_ve_fits","text":"ggplot2 object three faceted panels showing cumulative incidence VE estimates methods.","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/compare_ve_fits.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compare two vefit objects — compare_ve_fits","text":"fit1 fit2 must significance level (alpha). function stop error alphas differ. cumulative incidence panels, y-axis limits shared across methods facilitate comparison. VE panel uses free y-axis scaling.","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/compare_ve_fits.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare two vefit objects — compare_ve_fits","text":"","code":"if (FALSE) { # \\dontrun{ # Fit both methods fit_nomatch <- nomatchVE(data = simdata, ...) fit_match <- matching_ve(matched_data = matched_data, ...) # Compare with custom labels compare_ve_fits(   fit_match,   fit_nomatch,   labels = c(\"Matching\", \"G-computation\")) } # }"},{"path":"https://ewu16.github.io/nomatchVE/reference/compute_cox_ve.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the marginal cumulative incidence in the treated and untreated groups based on Cox model(s) — compute_cox_ve","title":"Get the marginal cumulative incidence in the treated and untreated groups based on Cox model(s) — compute_cox_ve","text":"function uses Cox model predict marginal cumulative incidence endpoint t0 days vaccination. marginal cumulative incidence computed predicting individual survival probabilities averaging predictions everyone treatment group.","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/compute_cox_ve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the marginal cumulative incidence in the treated and untreated groups based on Cox model(s) — compute_cox_ve","text":"","code":"compute_cox_ve(   adata,   adata_outcome_name,   adata_event_name,   adata_trt_name,   adjust,   eval_times,   censor_time,   separate = TRUE,   keep_models = TRUE )"},{"path":"https://ewu16.github.io/nomatchVE/reference/compute_cox_ve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the marginal cumulative incidence in the treated and untreated groups based on Cox model(s) — compute_cox_ve","text":"adata data frame represents analysis data set clinical trial. adata_outcome_name Character string specifying time event variable adata. time time event vaccination/matched index date adata_event_name Character string specifying event variable adata adata_trt_name Character string specifying treatment variable adata eval_times Numeric vector specifying timepoints compute cumulative incidence derived effect measures. timepoints expressed terms time since exposure. values must greater tau correspond clinically meaningful follow-durations, 30, 60, 90 days exposure. fine grid timepoints (e.g., eval_times = (tau+1):100) can provided cumulative incidence curves time desired. keep_models Logical; return two fitted hazard models used compute cumulative incidences? Default: TRUE.","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/compute_cox_ve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the marginal cumulative incidence in the treated and untreated groups based on Cox model(s) — compute_cox_ve","text":"list containing following: estimates matrix estimates. columns matrix cumulative incidence/VE terms rows requested time points evaluation. models keep_models = TRUE, models used compute risk VE","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/compute_km_ve.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the marginal cumulative incidence in the treated and untreated groups based on Kaplan Meier estimation. — compute_km_ve","title":"Get the marginal cumulative incidence in the treated and untreated groups based on Kaplan Meier estimation. — compute_km_ve","text":"Get marginal cumulative incidence treated untreated groups based Kaplan Meier estimation.","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/compute_km_ve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the marginal cumulative incidence in the treated and untreated groups based on Kaplan Meier estimation. — compute_km_ve","text":"","code":"compute_km_ve(   adata,   adata_outcome_name,   adata_event_name,   adata_trt_name,   eval_times,   keep_models = TRUE )"},{"path":"https://ewu16.github.io/nomatchVE/reference/compute_km_ve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the marginal cumulative incidence in the treated and untreated groups based on Kaplan Meier estimation. — compute_km_ve","text":"adata data frame represents analysis data set clinical trial. adata_outcome_name Character string specifying time event variable adata. time time event vaccination/matched index date adata_event_name Character string specifying event variable adata adata_trt_name Character string specifying treatment variable adata eval_times Numeric vector specifying timepoints compute cumulative incidence derived effect measures. timepoints expressed terms time since exposure. values must greater tau correspond clinically meaningful follow-durations, 30, 60, 90 days exposure. fine grid timepoints (e.g., eval_times = (tau+1):100) can provided cumulative incidence curves time desired. keep_models Logical; return two fitted hazard models used compute cumulative incidences? Default: TRUE.","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/compute_km_ve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the marginal cumulative incidence in the treated and untreated groups based on Kaplan Meier estimation. — compute_km_ve","text":"list containing following: estimates matrix estimates. columns matrix cumulative incidence/VE terms rows requested time points evaluation. models keep_models = TRUE, models used compute risk VE","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/compute_marginal_ve.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the marginal cumulative incidence in the treated and untreated groups based on a Cox model or Kaplan Meier curve. — compute_marginal_ve","title":"Get the marginal cumulative incidence in the treated and untreated groups based on a Cox model or Kaplan Meier curve. — compute_marginal_ve","text":"#' @description Internally calls compute_cox_ve() compute_km_ve() depending value method","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/compute_marginal_ve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the marginal cumulative incidence in the treated and untreated groups based on a Cox model or Kaplan Meier curve. — compute_marginal_ve","text":"","code":"compute_marginal_ve(   adata,   adata_outcome_name,   adata_event_name,   adata_trt_name,   eval_times,   method,   adjust = NULL,   censor_time = max(eval_times),   separate = TRUE,   keep_models = TRUE )"},{"path":"https://ewu16.github.io/nomatchVE/reference/compute_marginal_ve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the marginal cumulative incidence in the treated and untreated groups based on a Cox model or Kaplan Meier curve. — compute_marginal_ve","text":"adata data frame represents analysis data set clinical trial. adata_outcome_name Character string specifying time event variable adata. time time event vaccination/matched index date adata_event_name Character string specifying event variable adata adata_trt_name Character string specifying treatment variable adata eval_times Numeric vector specifying timepoints compute cumulative incidence derived effect measures. timepoints expressed terms time since exposure. values must greater tau correspond clinically meaningful follow-durations, 30, 60, 90 days exposure. fine grid timepoints (e.g., eval_times = (tau+1):100) can provided cumulative incidence curves time desired. keep_models Logical; return two fitted hazard models used compute cumulative incidences? Default: TRUE.","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/compute_marginal_ve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the marginal cumulative incidence in the treated and untreated groups based on a Cox model or Kaplan Meier curve. — compute_marginal_ve","text":"list containing following: estimates matrix estimates. columns matrix cumulative incidence/VE terms rows requested time points evaluation. models keep_models = TRUE, models used compute risk VE","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/compute_psi_bar_times.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute overall cumulative incidences at multiple timepoints — compute_psi_bar_times","title":"Compute overall cumulative incidences at multiple timepoints — compute_psi_bar_times","text":"Wrapper computes cumulative incidences multiple timepoints. Calls compute_psi_bar_t0()  internally timepoint. Models fitted calling function allow efficient evaluation multiple timepoints without refitting.","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/compute_psi_bar_times.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute overall cumulative incidences at multiple timepoints — compute_psi_bar_times","text":"","code":"compute_psi_bar_times(   fit_0,   fit_1,   exposure_time,   eval_times,   tau,   newdata,   gp_list )"},{"path":"https://ewu16.github.io/nomatchVE/reference/compute_psi_bar_times.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute overall cumulative incidences at multiple timepoints — compute_psi_bar_times","text":"fit_0 fitted model returned fit_model_0() fit_1 fitted model returned fit_model_1() exposure_time Name time--exposure variable  newdata. Used compute \\(\\psi_0(t_0; d,x)\\) \\(d + \\tau\\) \\(d + t_0\\) needed. tau Delay period newdata New data predictions.","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/compute_psi_bar_times.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute overall cumulative incidences at multiple timepoints — compute_psi_bar_times","text":"matrix estimates columns terms cuminc_0 cuminc_1, rows time points interest.","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/compute_psi_bar_times.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute overall cumulative incidences at multiple timepoints — compute_psi_bar_times","text":"function expects models already fitted via fit_model_0() fit_model_1(). performs G-computation predicting marginalizing conditional risks.","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/compute_psi_dx_t0.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute day- and covariate- specific cumulative incidences — compute_psi_dx_t0","title":"Compute day- and covariate- specific cumulative incidences — compute_psi_dx_t0","text":"Wrapper calls internal functions predicting cumulative incidences fitted hazard models. Returns predicted exposure-specific cumulative incidences side side time- covariate- pair newdata.","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/compute_psi_dx_t0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute day- and covariate- specific cumulative incidences — compute_psi_dx_t0","text":"","code":"compute_psi_dx_t0(fit_0, fit_1, exposure_time, t0, tau, newdata)"},{"path":"https://ewu16.github.io/nomatchVE/reference/compute_psi_dx_t0.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute day- and covariate- specific cumulative incidences — compute_psi_dx_t0","text":"fit_0 fitted model returned fit_model_0() fit_1 fitted model returned fit_model_1() exposure_time Name time--exposure variable  newdata. Used compute \\(\\psi_0(t_0; d,x)\\) \\(d + \\tau\\) \\(d + t_0\\) needed. t0 Time since exposure evaluate cumulative incidence. tau Delay period newdata New data predictions.","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/compute_psi_dx_t0.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute day- and covariate- specific cumulative incidences — compute_psi_dx_t0","text":"data frame one row per row newdata predicted cumulative incidences component survival probabilities: psi_0_dx, surv_0_d_plus_tau, surv_0_d_plus_t0 psi_1_dx, surv_1_tau, surv_1_t0","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/compute_psi_dx_t0.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute day- and covariate- specific cumulative incidences — compute_psi_dx_t0","text":"Definitions cumulative incidences returned: $$\\psi_0(t_0; d,x) = 1 - S_0(d+t_0; x)\\,/\\,S_0(d+\\tau; x)$$ $$\\psi_1(t_0; d,x) = 1 - S_1(t_0; d,x)\\,/\\,S_1(\\tau; d,x)$$ \\(d\\) represents exposure time, \\(x\\) represents covariates, \\(S_v\\) represents survival probability hazard model exposure \\(v\\).","code":""},{"path":[]},{"path":"https://ewu16.github.io/nomatchVE/reference/estimate_bootstrap_ci.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper to estimate generic bootstrapped confidence interval — estimate_bootstrap_ci","title":"Helper to estimate generic bootstrapped confidence interval — estimate_bootstrap_ci","text":"function computes Wald percentile bootstrapped confidence intervals proposed VE estimator.","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/estimate_bootstrap_ci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper to estimate generic bootstrapped confidence interval — estimate_bootstrap_ci","text":"","code":"estimate_bootstrap_ci(   one_boot_function_name,   one_boot_args,   ci_type,   boot_reps,   pt_est = NULL,   alpha = 0.05,   keep_boot_samples = TRUE,   n_cores = 1 )"},{"path":"https://ewu16.github.io/nomatchVE/reference/estimate_bootstrap_ci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper to estimate generic bootstrapped confidence interval — estimate_bootstrap_ci","text":"one_boot_function_name Character string naming function computes one bootstrap iteration estimates one_boot_args List arguments pass function computes one bootstrap iteration estimations ci_type Method constructing bootstrap confidence intervals. One \"wald\", \"percentile\", \"\". \"wald\" (default): Computes Wald-style intervals using bootstrap standard errors. See Confidence intervals section details. \"percentile\": Computes percentile bootstrap intervals. \"\": Computes returns sets intervals. boot_reps Number bootstrap replicates confidence intervals. Recommended use least 1000 publication-quality results. Use smaller values (e.g., 10-100) initial exploration. Default: 0 (bootstrapping). pt_est matrix estimates. columns matrix cumulative incidence/VE terms rows requested time points evaluation. alpha Significance level confidence intervals (Confidence level = 100*(1-alpha)%). Default: 0.05. keep_boot_samples Logical; return bootstrap samples? Default: TRUE. Must set TRUE user plans use add_simultaneous_ci() obtain simultaneous confidence intervals. n_cores Integer; parallel cores bootstrapping. Passed parallel::mclapply mc.cores. Unix-like OS ; available Windows. Default: 1.","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/estimate_bootstrap_ci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper to estimate generic bootstrapped confidence interval — estimate_bootstrap_ci","text":"list containing following: ci_estimates list matrices containing lower upper confidence interval bounds bootstrap standard error term. ci_type = \"wald\", bootstrapped standard errors transformed scale also included. n_success_boot numeric vector number successful bootstrap samples time point.(Success bootstrap samples result non-missing valid point estimates.) boot_samples keep_boot_samples = TRUE, list matrices term contain bootstrap estimates rows bootstrap iterations columns time points.","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/estimate_matching_ci.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate bootstrapped confidence intervals for matching-based VE estimator — estimate_matching_ci","title":"Estimate bootstrapped confidence intervals for matching-based VE estimator — estimate_matching_ci","text":"Estimate bootstrapped confidence intervals matching-based VE estimator","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/estimate_matching_ci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate bootstrapped confidence intervals for matching-based VE estimator — estimate_matching_ci","text":"","code":"estimate_matching_ci(   matched_data,   outcome_time = outcome_time,   outcome_status,   exposure,   exposure_time,   method = \"km\",   adjust = NULL,   eval_times,   censor_time = NULL,   tau,   separate = FALSE,   ci_type = \"wald\",   limit_type = \"fixed\",   data = NULL,   id_name = \"ID\",   matching_vars = NULL,   replace = FALSE,   boot_reps = 0,   pt_est = NULL,   alpha = 0.05,   keep_boot_samples,   n_cores = 1 )"},{"path":"https://ewu16.github.io/nomatchVE/reference/estimate_matching_ci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate bootstrapped confidence intervals for matching-based VE estimator — estimate_matching_ci","text":"matched_data data frame matched cohort outcome_time Name time--event/censoring variable. Time measured given time origin (e.g. study start, enrollment, age) individuals. outcome_status Name event indicator. underlying column numeric (1 = event, 0 = censored). exposure Name exposure indicator. underlying column numeric (1 = exposed follow-, 0 = never exposed follow-). exposure_time Name time exposure, measured chosen time origin; use NA exposed. Time must measured units (e.g. days) used  outcome_time. eval_times Numeric vector specifying timepoints compute cumulative incidence derived effect measures. timepoints expressed terms time since exposure. values must greater tau correspond clinically meaningful follow-durations, 30, 60, 90 days exposure. fine grid timepoints (e.g., eval_times = (tau+1):100) can provided cumulative incidence curves time desired. tau Non-negative numeric value specifying time exposure excluded risk evaluation period. argument primarily intended vaccination exposures, common exclude time vaccination immunity still building. Time must measured units used outcome_time exposure_time reflect biological understanding vaccine-induced immunity develops (usually 1-2 weeks). non-vaccine exposures, tau can set 0 (delay period). ci_type Method constructing bootstrap confidence intervals. One \"wald\", \"percentile\", \"\". \"wald\" (default): Computes Wald-style intervals using bootstrap standard errors. See Confidence intervals section details. \"percentile\": Computes percentile bootstrap intervals. \"\": Computes returns sets intervals. boot_reps Number bootstrap replicates confidence intervals. Recommended use least 1000 publication-quality results. Use smaller values (e.g., 10-100) initial exploration. Default: 0 (bootstrapping). pt_est matrix estimates. columns matrix cumulative incidence/VE terms rows requested timepoints evaluation. alpha Significance level confidence intervals (Confidence level = 100*(1-alpha)%). Default: 0.05. keep_boot_samples Logical; return bootstrap samples? Default: TRUE. Must set TRUE user plans use add_simultaneous_ci() obtain simultaneous confidence intervals. n_cores Integer; parallel cores bootstrapping. Passed parallel::mclapply mc.cores. Unix-like OS ; available Windows. Default: 1.","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/estimate_matching_ci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate bootstrapped confidence intervals for matching-based VE estimator — estimate_matching_ci","text":"list containing following: ci_estimates list matrices containing lower upper confidence interval bounds bootstrap standard error term. ci_type = \"wald\", bootstrapped standard errors transformed scale also included. n_success_boot number bootstrap samples used compute confidence interval boot_samples matrix containing estimates bootstrap replications. Rows represent bootstrap iterations, columns term estimated.","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/estimate_nomatch_ci.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate bootstrapped confidence intervals for proposed VE estimator — estimate_nomatch_ci","title":"Estimate bootstrapped confidence intervals for proposed VE estimator — estimate_nomatch_ci","text":"Estimate bootstrapped confidence intervals proposed VE estimator","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/estimate_nomatch_ci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate bootstrapped confidence intervals for proposed VE estimator — estimate_nomatch_ci","text":"","code":"estimate_nomatch_ci(   data,   outcome_time,   outcome_status,   exposure,   exposure_time,   covariates,   weights_source,   eval_times,   censor_time,   tau,   gp_list,   ci_type,   limit_type = \"limit\",   boot_reps,   pt_est = NULL,   alpha = 0.05,   keep_boot_samples = TRUE,   n_cores = 1 )"},{"path":"https://ewu16.github.io/nomatchVE/reference/estimate_nomatch_ci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate bootstrapped confidence intervals for proposed VE estimator — estimate_nomatch_ci","text":"data data frame one row per individual containing columns named outcome_time, outcome_status, exposure, exposure_time, variables listed covariates. outcome_time Name time--event/censoring variable. Time measured given time origin (e.g. study start, enrollment, age) individuals. outcome_status Name event indicator. underlying column numeric (1 = event, 0 = censored). exposure Name exposure indicator. underlying column numeric (1 = exposed follow-, 0 = never exposed follow-). exposure_time Name time exposure, measured chosen time origin; use NA exposed. Time must measured units (e.g. days) used  outcome_time. covariates Character vector covariates adjust fitting hazard models. covariates include known confounders exposure censoring measured chosen time origin. weights_source Character string specifying type marginalizing weights use. Either: \"observed\" (default): set marginalizing weights empirical distribution exposure eval_times covariates among exposed. provides close alignment weights implicitly used matching. \"custom\": use user-specified weights provided custom_weights argument. eval_times Numeric vector specifying timepoints compute cumulative incidence derived effect measures. timepoints expressed terms time since exposure. values must greater tau correspond clinically meaningful follow-durations, 30, 60, 90 days exposure. fine grid timepoints (e.g., eval_times = (tau+1):100) can provided cumulative incidence curves time desired. tau Non-negative numeric value specifying time exposure excluded risk evaluation period. argument primarily intended vaccination exposures, common exclude time vaccination immunity still building. Time must measured units used outcome_time exposure_time reflect biological understanding vaccine-induced immunity develops (usually 1-2 weeks). non-vaccine exposures, tau can set 0 (delay period). gp_list List two dataframes named g_weights p_weights representing marginalizing distributions use. ci_type Method constructing bootstrap confidence intervals. One \"wald\", \"percentile\", \"\". \"wald\" (default): Computes Wald-style intervals using bootstrap standard errors. See Confidence intervals section details. \"percentile\": Computes percentile bootstrap intervals. \"\": Computes returns sets intervals. boot_reps Number bootstrap replicates confidence intervals. Recommended use least 1000 publication-quality results. Use smaller values (e.g., 10-100) initial exploration. Default: 0 (bootstrapping). pt_est matrix estimates. columns matrix cumulative incidence/VE terms rows requested timepoints evaluation. alpha Significance level confidence intervals (Confidence level = 100*(1-alpha)%). Default: 0.05. keep_boot_samples Logical; return bootstrap samples? Default: TRUE. Must set TRUE user plans use add_simultaneous_ci() obtain simultaneous confidence intervals. n_cores Integer; parallel cores bootstrapping. Passed parallel::mclapply mc.cores. Unix-like OS ; available Windows. Default: 1. boot_formula_0 formula estimating hazards unvaccinated group bootstrap samples (model) boot_formula_1 formula estimating hazards vaccinated group bootstrap samples (model) matched_data data frame representing matched cohort","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/estimate_nomatch_ci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate bootstrapped confidence intervals for proposed VE estimator — estimate_nomatch_ci","text":"list containing following: ci_estimates list matrices containing lower upper confidence interval bounds bootstrap standard error term. ci_type = \"wald\", bootstrapped standard errors transformed scale also included. n_success_boot number bootstrap samples used compute confidence interval boot_samples matrix containing estimates bootstrap replications. Rows represent bootstrap iterations, columns term estimated.","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/estimates_to_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert estimates to tidy long-format data frame — estimates_to_df","title":"Convert estimates to tidy long-format data frame — estimates_to_df","text":"Converts estimates component vefit object long-format data frame easy plotting analysis. row represents one term (cumulative incidence derived effect measure) specific timepoint.","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/estimates_to_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert estimates to tidy long-format data frame — estimates_to_df","text":"","code":"estimates_to_df(estimates)"},{"path":"https://ewu16.github.io/nomatchVE/reference/estimates_to_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert estimates to tidy long-format data frame — estimates_to_df","text":"estimates list matrices, typically fit$estimates vefit object. matrix (e.g., cuminc_0, cuminc_1, vaccine_effectiveness/risk_ratio) contains estimates, confidence intervals, related statistics evaluated different timepoints.","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/estimates_to_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert estimates to tidy long-format data frame — estimates_to_df","text":"long-format data frame : t0: timepoint term: estimated (cuminc_0, cuminc_1, vaccine_effectiveness/risk_ratio) Remaining columns original matrices (estimates, confidence intervals, ad related statistics.)","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/fit_model_0.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit survival models to estimate exposure-specific hazards for G-computation approach — fit_model_0","title":"Fit survival models to estimate exposure-specific hazards for G-computation approach — fit_model_0","text":"fit_model_0() fits Cox model estimate risk unexposed individuals original time scale. Includes individuals, censoring exposed individuals time exposure. default, model adjusted <covariates>, included simple linear terms. fit_model_1() fits Cox model estimate risk exposed individuals time scale time since exposure. Includes exposed individuals remain risk tau days exposure. Individuals additionally censored censor_time days exposure avoid extrapolation beyond time period interest. default, model adjusted <covariates>, included simple linear terms, exposure time included natural cubic spline 4 degrees freedom.","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/fit_model_0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit survival models to estimate exposure-specific hazards for G-computation approach — fit_model_0","text":"","code":"fit_model_0(   data,   outcome_time,   outcome_status,   exposure,   exposure_time,   covariates,   formula_0 = NULL )  fit_model_1(   data,   outcome_time,   outcome_status,   exposure,   exposure_time,   covariates,   tau,   censor_time = NULL,   formula_1 = NULL )"},{"path":"https://ewu16.github.io/nomatchVE/reference/fit_model_0.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit survival models to estimate exposure-specific hazards for G-computation approach — fit_model_0","text":"data data frame one row per individual containing columns named outcome_time, outcome_status, exposure, exposure_time, variables listed covariates. outcome_time Name time--event/censoring variable. Time measured given time origin (e.g. study start, enrollment, age) individuals. outcome_status Name event indicator. underlying column numeric (1 = event, 0 = censored). exposure Name exposure indicator. underlying column numeric (1 = exposed follow-, 0 = never exposed follow-). exposure_time Name time exposure, measured chosen time origin; use NA exposed. Time must measured units (e.g. days) used  outcome_time. covariates Character vector covariates adjust fitting hazard models. covariates include known confounders exposure censoring measured chosen time origin. formula_0 Optional right hand side formula model 0. default, uses covariates. tau Non-negative numeric value specifying time exposure excluded risk evaluation period. argument primarily intended vaccination exposures, common exclude time vaccination immunity still building. Time must measured units used outcome_time exposure_time reflect biological understanding vaccine-induced immunity develops (usually 1-2 weeks). non-vaccine exposures, tau can set 0 (delay period). censor_time Time exposure exposed individuals censored model fitting prevent extrapolation. default, censoring applied. formula_1 Optional right hand side formula model 1. default, uses covariates plus natural spline vaccination day (4 df). Default NULL","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/fit_model_0.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit survival models to estimate exposure-specific hazards for G-computation approach — fit_model_0","text":"fitted coxph object additional component $data containing analysis dataset used fitting: fit_model_0(): includes survival tuple (Y, event)  covariates adjusted model, Y time time origin first endpoint, censoring exposure time (exposed individuals). fit_model_1(): includes survival tuple (T1, event), <exposure_time>, covariates adjusted model, T1 time exposure endpoint censoring, additional censoring censor_time. includes exposed individuals risk tau days exposure.","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/get_gp.html","id":null,"dir":"Reference","previous_headings":"","what":"Get empirical probability distributions g(d|x) and p(x) based on input data — get_gp","title":"Get empirical probability distributions g(d|x) and p(x) based on input data — get_gp","text":"Get empirical probability distributions g(d|x) p(x) based input data","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/get_gp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get empirical probability distributions g(d|x) and p(x) based on input data — get_gp","text":"","code":"get_gp(df, outcome_time, exposure, exposure_time, covariates, tau)"},{"path":"https://ewu16.github.io/nomatchVE/reference/get_gp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get empirical probability distributions g(d|x) and p(x) based on input data — get_gp","text":"df data frame representing target population estimated distributions typically, population involves \"analysis-eligible\" subset given data source outcome_time Name time--event/censoring variable. Time measured given time origin (e.g. study start, enrollment, age) individuals. exposure Name exposure indicator. underlying column numeric (1 = exposed follow-, 0 = never exposed follow-). exposure_time Name time exposure, measured chosen time origin; use NA exposed. Time must measured units (e.g. days) used  outcome_time. covariates Character vector covariates adjust fitting hazard models. covariates include known confounders exposure censoring measured chosen time origin. tau Numeric. vaccinated -risk tau days vaccination included.","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/get_gp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get empirical probability distributions g(d|x) and p(x) based on input data — get_gp","text":"list following: g_weights data frame containing covariate-conditional day probabilities. Columns include group_id identifying covariate group, <exposure_time> specifying day, probspecifying covariate-conditional day probability, variables incovariates} \\item{p_weights}{data frame containing covariate probabilities. Columns include group_id identifying covariate group,probspecifying covariate probability, variable incovariates`","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/get_observed_gp.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the marginalizing distribution in the observed or matched analysis-eligible populations. — get_observed_gp","title":"Estimate the marginalizing distribution in the observed or matched analysis-eligible populations. — get_observed_gp","text":"get_observed_gp returns marginalizing distributions  based original observed data get_matching_gp returns marginalizing distributions based matched-analysis data","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/get_observed_gp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the marginalizing distribution in the observed or matched analysis-eligible populations. — get_observed_gp","text":"","code":"get_observed_gp(data, outcome_time, exposure, exposure_time, covariates, tau)  get_matching_gp(   matched_adata,   outcome_name,   trt_name,   time_name,   adjust_vars,   tau )"},{"path":"https://ewu16.github.io/nomatchVE/reference/get_observed_gp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the marginalizing distribution in the observed or matched analysis-eligible populations. — get_observed_gp","text":"outcome_time Name time--event/censoring variable. Time measured given time origin (e.g. study start, enrollment, age) individuals. exposure Name exposure indicator. underlying column numeric (1 = exposed follow-, 0 = never exposed follow-). exposure_time Name time exposure, measured chosen time origin; use NA exposed. Time must measured units (e.g. days) used  outcome_time. covariates Character vector covariates adjust fitting hazard models. covariates include known confounders exposure censoring measured chosen time origin. tau Numeric. vaccinated -risk tau days vaccination included. matched_adata get_matching_gp, data frame representing matched analysis-eligible population","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/get_observed_gp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the marginalizing distribution in the observed or matched analysis-eligible populations. — get_observed_gp","text":"list two data frames containing marginalizing distributions returned calls get_gp()","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/get_observed_weights.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate observed distributions of exposure eval_times and covariates — get_observed_weights","title":"Estimate observed distributions of exposure eval_times and covariates — get_observed_weights","text":"Computes two empirical probability distributions used marginalize time- covariate- specific cumulative incidences: \\(g(d \\mid x)\\): distribution exposure eval_times within covariate subgroup exposed individuals remain risk tau days exposure. \\(p(x)\\): distribution covariates among exposed individuals remain risk tau days exposure. Called internally nomatchVE(). Provided example structure needed user passes custom_weights.","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/get_observed_weights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate observed distributions of exposure eval_times and covariates — get_observed_weights","text":"","code":"get_observed_weights(   data,   outcome_time,   exposure,   exposure_time,   covariates,   tau )"},{"path":"https://ewu16.github.io/nomatchVE/reference/get_observed_weights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate observed distributions of exposure eval_times and covariates — get_observed_weights","text":"outcome_time Name time--event/censoring variable. Time measured given time origin (e.g. study start, enrollment, age) individuals. exposure Name exposure indicator. underlying column numeric (1 = exposed follow-, 0 = never exposed follow-). exposure_time Name time exposure, measured chosen time origin; use NA exposed. Time must measured units (e.g. days) used  outcome_time. covariates Character vector covariates adjust fitting hazard models. covariates include known confounders exposure censoring measured chosen time origin. tau Numeric. vaccinated -risk tau days vaccination included.","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/get_observed_weights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate observed distributions of exposure eval_times and covariates — get_observed_weights","text":"list two data frames: g_weights: covariate-conditional exposure time  probabilities (\\(g(d \\mid x)\\)) p_weights: covariate probabilities (\\(p(x)\\)) data frame includes variables covariates, prob column empirical probabilities. g_weights additionally includes <exposure_time> column exposure eval_times.","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/get_observed_weights.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate observed distributions of exposure eval_times and covariates — get_observed_weights","text":"","code":"weights <- get_observed_weights(simdata, \"Y\", \"V\", \"D_obs\",                                    c(\"x1\", \"x2\"), tau = 14) str(weights) #> List of 2 #>  $ g_weights:'data.frame':\t1010 obs. of  4 variables: #>   ..$ x1   : int [1:1010] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ x2   : int [1:1010] 5 5 5 5 5 5 5 5 5 5 ... #>   ..$ D_obs: num [1:1010] 2 3 4 5 6 7 8 9 10 11 ... #>   ..$ prob : num [1:1010] 0.0256 0.022 0.011 0.0586 0.0183 ... #>  $ p_weights:'data.frame':\t14 obs. of  3 variables: #>   ..$ x1  : int [1:14] 0 0 0 0 0 0 0 1 1 1 ... #>   ..$ x2  : int [1:14] 5 6 7 8 9 10 11 5 6 7 ... #>   ..$ prob: num [1:14] 0.0675 0.0672 0.0705 0.064 0.0796 ..."},{"path":"https://ewu16.github.io/nomatchVE/reference/get_one_matching_ve.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute VE point estimate in matched data set — get_one_matching_ve","title":"Compute VE point estimate in matched data set — get_one_matching_ve","text":"First, creates analysis matched data set based matched_data. calls compute_marginal_ve() analysis data set, specifying appropriate outcome treatment arguments.","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/get_one_matching_ve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute VE point estimate in matched data set — get_one_matching_ve","text":"","code":"get_one_matching_ve(   matched_data,   outcome_time,   outcome_status,   exposure,   exposure_time,   tau,   eval_times,   method = \"km\",   censor_time = NULL,   adjust = NULL,   separate = TRUE,   keep_models = TRUE )"},{"path":"https://ewu16.github.io/nomatchVE/reference/get_one_matching_ve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute VE point estimate in matched data set — get_one_matching_ve","text":"matched_data data frame matched cohort outcome_time Name time--event/censoring variable. Time measured given time origin (e.g. study start, enrollment, age) individuals. outcome_status Name event indicator. underlying column numeric (1 = event, 0 = censored). exposure Name exposure indicator. underlying column numeric (1 = exposed follow-, 0 = never exposed follow-). exposure_time Name time exposure, measured chosen time origin; use NA exposed. Time must measured units (e.g. days) used  outcome_time. tau Non-negative numeric value specifying time exposure excluded risk evaluation period. argument primarily intended vaccination exposures, common exclude time vaccination immunity still building. Time must measured units used outcome_time exposure_time reflect biological understanding vaccine-induced immunity develops (usually 1-2 weeks). non-vaccine exposures, tau can set 0 (delay period). eval_times Numeric vector specifying timepoints compute cumulative incidence derived effect measures. timepoints expressed terms time since exposure. values must greater tau correspond clinically meaningful follow-durations, 30, 60, 90 days exposure. fine grid timepoints (e.g., eval_times = (tau+1):100) can provided cumulative incidence curves time desired. keep_models Logical; return two fitted hazard models used compute cumulative incidences? Default: TRUE.","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/get_one_matching_ve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute VE point estimate in matched data set — get_one_matching_ve","text":"object returned compute_marginal_ve()","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/get_one_nomatch_ve.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function to compute cumulative incidence and effect measures — get_one_nomatch_ve","title":"Internal function to compute cumulative incidence and effect measures — get_one_nomatch_ve","text":"internal function performs actual estimation cumulative incidences derived effect measures using G-computation style approach. called nomatchVE() one_boot_nomatch(). Users typically call functions rather calling function directly. historical reasons, function handles complex inputs exposed nomatchVE() interface. particular, includes options set censor time hazard model exposed weight weights matched dataset provide hazard model formulas prefit objects","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/get_one_nomatch_ve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function to compute cumulative incidence and effect measures — get_one_nomatch_ve","text":"","code":"get_one_nomatch_ve(   data,   outcome_time,   outcome_status,   exposure,   exposure_time,   covariates,   tau,   eval_times,   censor_time = max(eval_times),   effect = c(\"vaccine_effectiveness\", \"risk_ratio\"),   weights_source = c(\"observed\", \"custom\"),   custom_weights = NULL,   keep_models = TRUE,   return_gp_list = TRUE )"},{"path":"https://ewu16.github.io/nomatchVE/reference/get_one_nomatch_ve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function to compute cumulative incidence and effect measures — get_one_nomatch_ve","text":"data data frame one row per individual containing columns named outcome_time, outcome_status, exposure, exposure_time, variables listed covariates. outcome_time Name time--event/censoring variable. Time measured given time origin (e.g. study start, enrollment, age) individuals. outcome_status Name event indicator. underlying column numeric (1 = event, 0 = censored). exposure Name exposure indicator. underlying column numeric (1 = exposed follow-, 0 = never exposed follow-). exposure_time Name time exposure, measured chosen time origin; use NA exposed. Time must measured units (e.g. days) used  outcome_time. covariates Character vector covariates adjust fitting hazard models. covariates include known confounders exposure censoring measured chosen time origin. tau Non-negative numeric value specifying time exposure excluded risk evaluation period. argument primarily intended vaccination exposures, common exclude time vaccination immunity still building. Time must measured units used outcome_time exposure_time reflect biological understanding vaccine-induced immunity develops (usually 1-2 weeks). non-vaccine exposures, tau can set 0 (delay period). eval_times Numeric vector specifying timepoints compute cumulative incidence derived effect measures. timepoints expressed terms time since exposure. values must greater tau correspond clinically meaningful follow-durations, 30, 60, 90 days exposure. fine grid timepoints (e.g., eval_times = (tau+1):100) can provided cumulative incidence curves time desired. censor_time Time exposure exposed individuals administratively censored model fitting. Default: max(eval_times). limits estimation observed  period interest prevents extrapolation beyond largest evaluation time. Typically, users leave default. effect Character. Type effect measure compute return, based estimated cumulative incidences. Either \"vaccine_effectiveness\" (default) \"risk_ratio\". weights_source Character string specifying construct marginalizing weights. One : \"observed\" (default): estimate weights observed data; \"custom\": use user-specified weights provided via custom_weights argument; custom_weights list(g_weights, p_weights) providing weights marginalizing time- covariate-specific cumulative incidences. Must following format: g_weights: data frame columns variables covariates exposure_time (time exposure), prob (probability exposure given time within covariate-group; sum 1 within covariate-group) p_weights: data frame columns variables covariates prob (probability covariate-group; sum 1 covariate groups.) keep_models Logical; return two fitted hazard models used compute cumulative incidences? Default: TRUE. return_gp_list Logical; return marginalizing weights? Default TRUE. formula_0 Either formula pre-fit coxph model object unvaccinated hazard (original time scale). fitted model provided, used directly instead fitting new model. Intended advanced use. formula_1 Either formula pre-fit  coxph model object vaccinated hazard (time-since-exposure scale). fitted model provided, used directly instead fitting new model. Intended advanced use. return_matching Logical; return matched datasets? Default TRUE weights_source = \"matched\". weights_source != \"matched\", automatically set FALSE.","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/get_one_nomatch_ve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal function to compute cumulative incidence and effect measures — get_one_nomatch_ve","text":"List components: estimates List matrices: cuminc_0, cuminc_1, risk_ratio, vaccine_effectiveness matrix one row per timepoint model_0, model_1 Fitted Cox models (keep_models = TRUE) gp_list Marginalizing distributions (return_gp_list = TRUE) matched_data, matched_adata Matched datasets (weights_source = \"matched\")","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/get_z_star.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate critical value for simultaneous confidence bands — get_z_star","title":"Calculate critical value for simultaneous confidence bands — get_z_star","text":"Computes critical value simultaneous confidence intervals simulating bootstrap covariance structure (10,000 draws multivariate normal).","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/get_z_star.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate critical value for simultaneous confidence bands — get_z_star","text":"","code":"get_z_star(mat, alpha, seed = NULL)"},{"path":"https://ewu16.github.io/nomatchVE/reference/get_z_star.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate critical value for simultaneous confidence bands — get_z_star","text":"mat Matrix bootstrap estimates (rows = iterations, columns = timepoints) alpha Significance level (e.g., 0.05 95% confidence) seed Integer seed reproducibility. Default NULL","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/get_z_star.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate critical value for simultaneous confidence bands — get_z_star","text":"List containing: z_star Critical value (scalar) excluded_timepoints Timepoints excluded due >5% missing bootstrap estimates, NULL","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/marginalize_psi_dx_t0.html","id":null,"dir":"Reference","previous_headings":"","what":"Marginalize conditional cumulative incidences — marginalize_psi_dx_t0","title":"Marginalize conditional cumulative incidences — marginalize_psi_dx_t0","text":"Averages day- covariate-specific cumulative incidences compute_psi_dx_t0() produce overall cumulative incidences exposure. default, performs simple average. weights provided gp_list, performs weighted average.","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/marginalize_psi_dx_t0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Marginalize conditional cumulative incidences — marginalize_psi_dx_t0","text":"","code":"marginalize_psi_dx_t0(psi_dx, gp_list = NULL, show_intermediates = FALSE)"},{"path":"https://ewu16.github.io/nomatchVE/reference/marginalize_psi_dx_t0.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Marginalize conditional cumulative incidences — marginalize_psi_dx_t0","text":"psi_dx data frame conditional risk predictions containing: <covariates>: covariate columns <exposure_time>: vaccination day column psi_0_dx: cumulative incidence vaccine,\\(\\psi_0(t_0; d, x)\\) psi_1_dx: cumulative incidence  vaccine,\\(\\psi_1(t_0; d, x)\\) Typically output compute_psi_dx_t0(). gp_list list two data frames: g_weights Data frame covariate-conditional exposure-day probabilities \\(g(d \\mid x)\\). Must include: group_id: covariate group identifier <exposure_time>: exposure time variable prob_g: probability exposure time given covariates variables covariates p_weights Data frame covariate probabilities \\(p(x)\\). Must include: group_id: covariate group identifier prob_p: marginal probability covariate group variables covariates Default NULL case row psi_dx gets equal weight. show_intermediates Logical applies gp_list NULL; FALSE(default), function performs marginalization single step returns overall cumulative incidences \\eqn{\\bar{\\psi}_0(t_0)} \\eqn{\\bar{\\psi}_1(t_0)}. WhenTRUE“, performs two-step marginalization (first days \\(d\\), covariate groups \\(x\\)) returns intermediate group-level results \\(\\psi_v(t_0; x)\\).","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/marginalize_psi_dx_t0.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Marginalize conditional cumulative incidences — marginalize_psi_dx_t0","text":"show_intermediates = FALSE, named numeric vector two elements: cuminc_0: Overall cumulative incidence exposure cuminc_1: Overall cumulative incidence exposure show_intermediates = TRUE, list containing overall results (vector) group-specific results (data frame).","code":""},{"path":[]},{"path":"https://ewu16.github.io/nomatchVE/reference/match_rolling_cohort.html","id":null,"dir":"Reference","previous_headings":"","what":"Match vaccinated and unvaccinated individuals using rolling cohort design — match_rolling_cohort","title":"Match vaccinated and unvaccinated individuals using rolling cohort design — match_rolling_cohort","text":"Creates 1:1 matched pairs vaccinated (\"cases\") unvaccinated (\"controls\") individuals. Uses rolling cohort design controls must unvaccinated event-free time matched case.","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/match_rolling_cohort.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match vaccinated and unvaccinated individuals using rolling cohort design — match_rolling_cohort","text":"","code":"match_rolling_cohort(   data,   outcome_time,   exposure,   exposure_time,   matching_vars,   id_name,   replace = FALSE,   seed = NULL )"},{"path":"https://ewu16.github.io/nomatchVE/reference/match_rolling_cohort.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match vaccinated and unvaccinated individuals using rolling cohort design — match_rolling_cohort","text":"data Data frame study population outcome_time Name time--event/censoring variable. Time measured given time origin (e.g. study start, enrollment, age) individuals. exposure Name exposure indicator. underlying column numeric (1 = exposed follow-, 0 = never exposed follow-). exposure_time Name time exposure, measured chosen time origin; use NA exposed. Time must measured units (e.g. days) used  outcome_time. matching_vars Character vector variables match exactly id_name Name unique identifier variable individuals replace Logical. Allow controls reused? Default: FALSE seed Integer reproducibility. Default: NULL","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/match_rolling_cohort.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match vaccinated and unvaccinated individuals using rolling cohort design — match_rolling_cohort","text":"list containing following: matched_data Data frame matched pairs original variables plus: match_index_time: Matching time match_type: \"case\" \"control\" match_<exposure>: Treatment matching match_id: Pair identifier n_unmatched_cases Number unmatched vaccinated individuals discarded Logical vector indicating excluded individuals","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/match_rolling_cohort.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Match vaccinated and unvaccinated individuals using rolling cohort design — match_rolling_cohort","text":"vaccination time, newly vaccinated individuals matched eligible controls using exact covariate matching. Controls eligible unvaccinated event-free time. Vaccinated individuals may appear control (yet vaccinated) case.","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/match_rolling_cohort.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Match vaccinated and unvaccinated individuals using rolling cohort design — match_rolling_cohort","text":"","code":"matched_cohort <- match_rolling_cohort( data = simdata, outcome_time =  \"Y\", exposure = \"V\", exposure_time = \"D_obs\", matching_vars = c(\"x1\", \"x2\"), id_name = \"ID\", seed = 5678 )"},{"path":"https://ewu16.github.io/nomatchVE/reference/matched_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameters for creating a matched dataset and matched analysis data set — matched_dist","title":"Parameters for creating a matched dataset and matched analysis data set — matched_dist","text":"Parameters creating matched dataset matched analysis data set","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/matched_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameters for creating a matched dataset and matched analysis data set — matched_dist","text":"","code":"matched_dist(id_name = \"ID\", matched_data = NULL, replace = FALSE, seed = NULL)"},{"path":"https://ewu16.github.io/nomatchVE/reference/matched_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameters for creating a matched dataset and matched analysis data set — matched_dist","text":"id_name Name unique identifier variable individuals matched_data data frame representing matched cohort replace Logical. Allow controls reused? Default: FALSE seed Integer reproducibility. Default: NULL","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/matched_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parameters for creating a matched dataset and matched analysis data set — matched_dist","text":"list control parameters","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/matching_ve.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a matching-based estimator of VE with confidence intervals — matching_ve","title":"Compute a matching-based estimator of VE with confidence intervals — matching_ve","text":"function main function computing matching-based estimator.","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/matching_ve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a matching-based estimator of VE with confidence intervals — matching_ve","text":"","code":"matching_ve(   matched_data,   outcome_time,   outcome_status,   exposure,   exposure_time,   tau,   eval_times,   effect = c(\"vaccine_effectiveness\", \"risk_ratio\"),   ci_type = c(\"wald\", \"percentile\", \"both\"),   boot_reps = 0,   alpha = 0.05,   keep_models = TRUE,   keep_boot_samples = TRUE,   n_cores = 1 )"},{"path":"https://ewu16.github.io/nomatchVE/reference/matching_ve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a matching-based estimator of VE with confidence intervals — matching_ve","text":"matched_data data frame matched cohort outcome_time Name time--event/censoring variable. Time measured given time origin (e.g. study start, enrollment, age) individuals. outcome_status Name event indicator. underlying column numeric (1 = event, 0 = censored). exposure Name exposure indicator. underlying column numeric (1 = exposed follow-, 0 = never exposed follow-). exposure_time Name time exposure, measured chosen time origin; use NA exposed. Time must measured units (e.g. days) used  outcome_time. tau Non-negative numeric value specifying time exposure excluded risk evaluation period. argument primarily intended vaccination exposures, common exclude time vaccination immunity still building. Time must measured units used outcome_time exposure_time reflect biological understanding vaccine-induced immunity develops (usually 1-2 weeks). non-vaccine exposures, tau can set 0 (delay period). eval_times Numeric vector specifying timepoints compute cumulative incidence derived effect measures. timepoints expressed terms time since exposure. values must greater tau correspond clinically meaningful follow-durations, 30, 60, 90 days exposure. fine grid timepoints (e.g., eval_times = (tau+1):100) can provided cumulative incidence curves time desired. effect Character. Type effect measure compute return, based estimated cumulative incidences. Either \"vaccine_effectiveness\" (default) \"risk_ratio\". ci_type Method constructing bootstrap confidence intervals. One \"wald\", \"percentile\", \"\". \"wald\" (default): Computes Wald-style intervals using bootstrap standard errors. See Confidence intervals section details. \"percentile\": Computes percentile bootstrap intervals. \"\": Computes returns sets intervals. boot_reps Number bootstrap replicates confidence intervals. Recommended use least 1000 publication-quality results. Use smaller values (e.g., 10-100) initial exploration. Default: 0 (bootstrapping). alpha Significance level confidence intervals (Confidence level = 100*(1-alpha)%). Default: 0.05. keep_models Logical; return two fitted hazard models used compute cumulative incidences? Default: TRUE. keep_boot_samples Logical; return bootstrap samples? Default: TRUE. Must set TRUE user plans use add_simultaneous_ci() obtain simultaneous confidence intervals. n_cores Integer; parallel cores bootstrapping. Passed parallel::mclapply mc.cores. Unix-like OS ; available Windows. Default: 1.","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/matching_ve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a matching-based estimator of VE with confidence intervals — matching_ve","text":"list containing following: estimates list matrices estimates timepoint. Rows matrix terms \"cuminc_0\", \"cuminc_1\", \"vaccine_effectiveness\". Columns matrix gives point estimate confidence intervals specified time point. eval_times timepoints VE evaluated n_success_boot numeric vector number successful bootstrap samples time point.(Success bootstrap samples result non-missing valid point estimates.) boot_samples keep_boot_samples = TRUE, list matrices term contain bootstrap estimates rows bootstrap iterations columns time points.","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/nomatchVE-package.html","id":null,"dir":"Reference","previous_headings":"","what":"nomatchVE: Estimate Causal Vaccine Effectiveness in Observational Studies Without Matching — nomatchVE-package","title":"nomatchVE: Estimate Causal Vaccine Effectiveness in Observational Studies Without Matching — nomatchVE-package","text":"Implements estimators proposed causal estimand vaccine effectiveness using observational data.","code":""},{"path":[]},{"path":"https://ewu16.github.io/nomatchVE/reference/nomatchVE-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"nomatchVE: Estimate Causal Vaccine Effectiveness in Observational Studies Without Matching — nomatchVE-package","text":"Maintainer: Emily Wu emily.wu2@emory.edu (ORCID)","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/nomatchVE.html","id":null,"dir":"Reference","previous_headings":"","what":"Main function to estimate marginal cumulative incidences and derived effect measures without matching — nomatchVE","title":"Main function to estimate marginal cumulative incidences and derived effect measures without matching — nomatchVE","text":"nomatchVE() estimates marginal cumulative incidences exposure exposure using G-computation approach. method fits two conditional hazard models- one unexposed one exposed- uses models predict time- covariate- specific cumulative incidences. predicted conditional risks marginalized compute overall (marginal) cumulative incidences. resulting cumulative incidences can summarized risk ratios (RR) 1 - RR (vaccine effectiveness).","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/nomatchVE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Main function to estimate marginal cumulative incidences and derived effect measures without matching — nomatchVE","text":"","code":"nomatchVE(   data,   outcome_time,   outcome_status,   exposure,   exposure_time,   covariates,   tau,   eval_times,   effect = c(\"vaccine_effectiveness\", \"risk_ratio\"),   weights_source = c(\"observed\", \"custom\"),   custom_weights = NULL,   ci_type = c(\"wald\", \"percentile\", \"both\"),   boot_reps = 0,   alpha = 0.05,   keep_models = TRUE,   keep_boot_samples = TRUE,   n_cores = 1 )"},{"path":"https://ewu16.github.io/nomatchVE/reference/nomatchVE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Main function to estimate marginal cumulative incidences and derived effect measures without matching — nomatchVE","text":"data data frame one row per individual containing columns named outcome_time, outcome_status, exposure, exposure_time, variables listed covariates. outcome_time Name time--event/censoring variable. Time measured given time origin (e.g. study start, enrollment, age) individuals. outcome_status Name event indicator. underlying column numeric (1 = event, 0 = censored). exposure Name exposure indicator. underlying column numeric (1 = exposed follow-, 0 = never exposed follow-). exposure_time Name time exposure, measured chosen time origin; use NA exposed. Time must measured units (e.g. days) used  outcome_time. covariates Character vector covariates adjust fitting hazard models. covariates include known confounders exposure censoring measured chosen time origin. tau Non-negative numeric value specifying time exposure excluded risk evaluation period. argument primarily intended vaccination exposures, common exclude time vaccination immunity still building. Time must measured units used outcome_time exposure_time reflect biological understanding vaccine-induced immunity develops (usually 1-2 weeks). non-vaccine exposures, tau can set 0 (delay period). eval_times Numeric vector specifying timepoints compute cumulative incidence derived effect measures. timepoints expressed terms time since exposure. values must greater tau correspond clinically meaningful follow-durations, 30, 60, 90 days exposure. fine grid timepoints (e.g., eval_times = (tau+1):100) can provided cumulative incidence curves time desired. effect Character. Type effect measure compute return, based estimated cumulative incidences. Either \"vaccine_effectiveness\" (default) \"risk_ratio\". weights_source Character string specifying type marginalizing weights use. Either: \"observed\" (default): set marginalizing weights empirical distribution exposure eval_times covariates among exposed. provides close alignment weights implicitly used matching. \"custom\": use user-specified weights provided custom_weights argument. custom_weights list(g_weights, p_weights) providing weights marginalizing time- covariate-specific cumulative incidences. Must following format: g_weights: data frame columns variables covariates exposure_time (time exposure), prob (probability exposure given time within covariate-group; sum 1 within covariate-group) p_weights: data frame columns variables covariates prob (probability covariate-group; sum 1 covariate groups.) ci_type Method constructing bootstrap confidence intervals. One \"wald\", \"percentile\", \"\". \"wald\" (default): Computes Wald-style intervals using bootstrap standard errors. See Confidence intervals section details. \"percentile\": Computes percentile bootstrap intervals. \"\": Computes returns sets intervals. boot_reps Number bootstrap replicates confidence intervals. Recommended use least 1000 publication-quality results. Use smaller values (e.g., 10-100) initial exploration. Default: 0 (bootstrapping). alpha Significance level confidence intervals (Confidence level = 100*(1-alpha)%). Default: 0.05. keep_models Logical; return two fitted hazard models used compute cumulative incidences? Default: TRUE. keep_boot_samples Logical; return bootstrap samples? Default: TRUE. Must set TRUE user plans use add_simultaneous_ci() obtain simultaneous confidence intervals. n_cores Integer; parallel cores bootstrapping. Passed parallel::mclapply mc.cores. Unix-like OS ; available Windows. Default: 1.","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/nomatchVE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Main function to estimate marginal cumulative incidences and derived effect measures without matching — nomatchVE","text":"object class vefit containing: estimates List matrices: cuminc_0 marginal cumulative incidence exposure cuminc_1 marginal cumulative incidence exposure <effect> selected effect measure name matrix one row per value eval_times columns including point estimate (estimate) , requested, confidence limits form ({wald/percentile}_lower, {wald/percentile}_upper). gp_list List dataframes g_weights, p_weights specifying marginalizing weights used averaging exposure eval_times covariates. model_0 Fitted hazard model unexposed group. See Modeling section details. model_1 Fitted hazard model exposed group. See Modeling section details. n_success_boot Integer vector indicating number successful bootstrap replications per timepoint. boot_samples (keep_boot_samples = TRUE) List bootstrap draws (stored matrices) returned quantity names mirroring estimates (.e. cuminc_0, cuminc_1, <effect). Rows index bootstrap replicates columns index eval_times. vefit object methods print(), summary(), plot(). Use add_simultaneous_ci() add simultaneous confidence intervals.","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/nomatchVE.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Main function to estimate marginal cumulative incidences and derived effect measures without matching — nomatchVE","text":"Modeling. Two Cox proportional hazards models fit estimate exposure-specific cumulative incidences. first models hazard outcome chosen time scale among individuals yet exposed, exposed individuals censored time exposure. second models hazard time since exposure among individuals exposed remain risk tau days exposure. models adjust specified covariates help control confounding. second model also flexibly adjusts exposure time (natural cubic spline 4 degrees freedom) capture time-varying background risk. Predicted risks models marginalized specified covariate exposure-time distributions obtain G-computation style cumulative incidence estimates. Marginalizing weights. weights_source = \"observed\", marginalizing weights empirical distributions exposure eval_times covariates among exposed remain -risk tau days exposure. weights returned vefit object gp_list. can also obtained prior call nomatchVE() calling get_observed_weights(). Confidence intervals. Wald CIs constructed transformed scales: \\(\\text{logit}\\) cumulative incidence; \\(\\log{RR}\\) risk ratios, \\(\\log{1 - VE}\\) vaccine effectiveness, using bootstrap SEs. back-transformed original scale. Parallelization. Bootstraps can parallelized Unix via parallel::mclapply() providing n_cores argument.","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/nomatchVE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Main function to estimate marginal cumulative incidences and derived effect measures without matching — nomatchVE","text":"","code":"# Fit vaccine effectiveness model using simulated data data(simdata)  fit <- nomatchVE(   data = simdata,   outcome_time = \"Y\",   outcome_status = \"event\",   exposure = \"V\",   exposure_time = \"D_obs\",   covariates = c(\"x1\", \"x2\"),   eval_times = seq(30, 180, by = 30),   tau = 14,   boot_reps = 5,   n_cores = 2 ) #> Bootstrapping 5 samples... #> Time difference of 1.371821 secs  # View basic results fit$estimates #> $cuminc_0 #>       estimate wald_lower wald_upper wald_n #> 30  0.01163891 0.01007963 0.01343613      5 #> 60  0.03790915 0.03331788 0.04310488      5 #> 90  0.05857293 0.05262835 0.06514281      5 #> 120 0.06691947 0.06032600 0.07417670      5 #> 150 0.07548793 0.06861566 0.08298717      5 #> 180 0.09576440 0.08852914 0.10352382      5 #>  #> $cuminc_1 #>        estimate wald_lower  wald_upper wald_n #> 30  0.006221396 0.00490263 0.007892084      5 #> 60  0.022928272 0.02175395 0.024164415      5 #> 90  0.035306397 0.03194971 0.039001536      5 #> 120 0.044201057 0.04127583 0.047323360      5 #> 150 0.055121412 0.04940982 0.061450566      5 #> 180 0.099205626 0.09157224 0.107400100      5 #>  #> $vaccine_effectiveness #>        estimate wald_lower wald_upper wald_n #> 30   0.46546592  0.3216548 0.57878865      5 #> 60   0.39517839  0.3201008 0.46196555      5 #> 90   0.39722334  0.2812300 0.49449794      5 #> 120  0.33948883  0.2407852 0.42536023      5 #> 150  0.26979833  0.1526535 0.37074799      5 #> 180 -0.03593427 -0.1511121 0.06771911      5 #>"},{"path":"https://ewu16.github.io/nomatchVE/reference/one_boot_matching.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute one bootstrap replicate of matching-based VE point estimate — one_boot_matching","title":"Compute one bootstrap replicate of matching-based VE point estimate — one_boot_matching","text":"Compute one bootstrap replicate matching-based VE point estimate","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/one_boot_matching.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute one bootstrap replicate of matching-based VE point estimate — one_boot_matching","text":"","code":"one_boot_matching(   matched_data,   outcome_time,   outcome_status,   exposure,   exposure_time,   method,   adjust = NULL,   eval_times,   censor_time = NULL,   tau,   separate = FALSE,   limit_type = \"fixed\",   data = NULL,   id_name = \"ID\",   matching_vars = NULL,   replace = FALSE,   keep_boot_samples = TRUE )"},{"path":"https://ewu16.github.io/nomatchVE/reference/one_boot_matching.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute one bootstrap replicate of matching-based VE point estimate — one_boot_matching","text":"matched_data data frame matched cohort outcome_time Name time--event/censoring variable. Time measured given time origin (e.g. study start, enrollment, age) individuals. outcome_status Name event indicator. underlying column numeric (1 = event, 0 = censored). exposure Name exposure indicator. underlying column numeric (1 = exposed follow-, 0 = never exposed follow-). exposure_time Name time exposure, measured chosen time origin; use NA exposed. Time must measured units (e.g. days) used  outcome_time. eval_times Numeric vector specifying timepoints compute cumulative incidence derived effect measures. timepoints expressed terms time since exposure. values must greater tau correspond clinically meaningful follow-durations, 30, 60, 90 days exposure. fine grid timepoints (e.g., eval_times = (tau+1):100) can provided cumulative incidence curves time desired. tau Non-negative numeric value specifying time exposure excluded risk evaluation period. argument primarily intended vaccination exposures, common exclude time vaccination immunity still building. Time must measured units used outcome_time exposure_time reflect biological understanding vaccine-induced immunity develops (usually 1-2 weeks). non-vaccine exposures, tau can set 0 (delay period). keep_boot_samples Logical; return bootstrap samples? Default: TRUE. Must set TRUE user plans use add_simultaneous_ci() obtain simultaneous confidence intervals.","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/one_boot_matching.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute one bootstrap replicate of matching-based VE point estimate — one_boot_matching","text":"matrix bootstrapped estimates columns matrix cumulative incidence/VE terms rows requested time points evaluation.","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/one_boot_nomatch.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute one bootstrap replicate of VE point estimate — one_boot_nomatch","title":"Compute one bootstrap replicate of VE point estimate — one_boot_nomatch","text":"function creates bootstrapped sample computes corresponding point estimate","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/one_boot_nomatch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute one bootstrap replicate of VE point estimate — one_boot_nomatch","text":"","code":"one_boot_nomatch(   data,   outcome_time,   outcome_status,   exposure,   exposure_time,   covariates,   weights_source,   eval_times,   censor_time,   tau,   gp_list,   limit_type )"},{"path":"https://ewu16.github.io/nomatchVE/reference/one_boot_nomatch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute one bootstrap replicate of VE point estimate — one_boot_nomatch","text":"data data frame one row per individual containing columns named outcome_time, outcome_status, exposure, exposure_time, variables listed covariates. outcome_time Name time--event/censoring variable. Time measured given time origin (e.g. study start, enrollment, age) individuals. outcome_status Name event indicator. underlying column numeric (1 = event, 0 = censored). exposure Name exposure indicator. underlying column numeric (1 = exposed follow-, 0 = never exposed follow-). exposure_time Name time exposure, measured chosen time origin; use NA exposed. Time must measured units (e.g. days) used  outcome_time. covariates Character vector covariates adjust fitting hazard models. covariates include known confounders exposure censoring measured chosen time origin. weights_source Character string specifying type marginalizing weights use. Either: \"observed\" (default): set marginalizing weights empirical distribution exposure eval_times covariates among exposed. provides close alignment weights implicitly used matching. \"custom\": use user-specified weights provided custom_weights argument. eval_times Numeric vector specifying timepoints compute cumulative incidence derived effect measures. timepoints expressed terms time since exposure. values must greater tau correspond clinically meaningful follow-durations, 30, 60, 90 days exposure. fine grid timepoints (e.g., eval_times = (tau+1):100) can provided cumulative incidence curves time desired. tau Non-negative numeric value specifying time exposure excluded risk evaluation period. argument primarily intended vaccination exposures, common exclude time vaccination immunity still building. Time must measured units used outcome_time exposure_time reflect biological understanding vaccine-induced immunity develops (usually 1-2 weeks). non-vaccine exposures, tau can set 0 (delay period). gp_list List two dataframes named g_weights p_weights representing marginalizing distributions use.","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/one_boot_nomatch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute one bootstrap replicate of VE point estimate — one_boot_nomatch","text":"matrix bootstrapped estimates columns matrix cumulative incidence/VE terms rows requested time points evaluation.","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/plot.vefit.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for vefit objects — plot.vefit","title":"Plot method for vefit objects — plot.vefit","text":"Plot cumulative incidence VE estimates across evaluation time points.","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/plot.vefit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for vefit objects — plot.vefit","text":"","code":"# S3 method for class 'vefit' plot(object, ci_type = NULL, color = \"#0072B2\")"},{"path":"https://ewu16.github.io/nomatchVE/reference/plot.vefit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for vefit objects — plot.vefit","text":"object object class vefit created nomatchVE() matching_ve(). ci_type Character string specifying type confidence interval bands plot. One \"wald\", \"percentile\", \"simul\", \"none\". Must choose ci_type whose lower upper bounds already computed object$estimates component object. color Aesthetic value map data values . Default: \"#0072B2\" (blue)","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/plot.vefit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for vefit objects — plot.vefit","text":"ggpplot2 object line plot term (cumulative incidence, VE)","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/plot.vefit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot method for vefit objects — plot.vefit","text":"cumulative incidence panels, y-axis limits shared across methods facilitate comparison. VE panel uses free y-axis scaling.","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/predict_from_model_0.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute conditional cumulative incidences from fitted Cox models — predict_from_model_0","title":"Compute conditional cumulative incidences from fitted Cox models — predict_from_model_0","text":"functions compute conditional day- covariate-specific cumulative incidence row newdata. predict_from_model_0() computes \\(\\psi_0(t_0; d, x) = 1 - S_0(d+t_0 \\mid x)/S_0(d+\\tau \\mid x)\\) calling predict(fit_0, newdata, type = \"survival\") eval_times d + t0 d + tau. predict_from_model_1() computes \\(\\psi_1(t_0; d, x) = 1 - S_1(t_0 \\mid d, x)/S_1(\\tau \\mid d, x)\\) calling predict(fit_1, newdata, type = \"survival\")eval_timest0andtau`.","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/predict_from_model_0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute conditional cumulative incidences from fitted Cox models — predict_from_model_0","text":"","code":"predict_from_model_0(fit_0, exposure_time, t0, tau, newdata)  predict_from_model_1(fit_1, exposure_time, t0, tau, newdata)"},{"path":"https://ewu16.github.io/nomatchVE/reference/predict_from_model_0.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute conditional cumulative incidences from fitted Cox models — predict_from_model_0","text":"newdata data frame three additional columns: predict_from_model_0(): surv_0_d_plus_tau, surv_0_d_plus_t0, psi_0_dx predict_from_model_1(): surv_1_tau, surv_1_t0, psi_1_dx","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/predict_from_model_0.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute conditional cumulative incidences from fitted Cox models — predict_from_model_0","text":"","code":"# Fit hazard model under no vaccine fit_0 <- fit_model_0(   data = simdata,   outcome_time = \"Y\",   outcome_status = \"event\",   exposure = \"V\",   exposure_time = \"D_obs\",   covariates = covariates  ) #> Error: object 'covariates' not found  # Fit hazard model under vaccine fit_1 <- fit_model_1(   data = simdata,   outcome_time = \"Y\",   outcome_status = \"event\",   exposure = \"V\",   exposure_time = \"D_obs\",   tau = tau  ) #> Error in fit_model_1(data = simdata, outcome_time = \"Y\", outcome_status = \"event\",     exposure = \"V\", exposure_time = \"D_obs\", tau = tau): argument \"covariates\" is missing, with no default   # Define dataset for prediction, # e.g. vaccinated indiviudals at risk tau days after vaccination newdata <- simdata[simdata$V == 1 & (simdata$Y - simdata$D_obs) > 14,]  # Predict from hazard model under no vaccine predict_from_model_0(     fit_0,     exposure_time = \"D_obs\",     t0 = 90,     tau = 14,     newdata = newdata ) #> Error: object 'fit_0' not found  # Predict from hazard model under vaccine predict_from_model_1(   fit_1,   exposure_time = \"D_obs\",   t0 = 90,   tau = 14,   newdata = newdata ) #> Error in predict_from_model_1(fit_1, exposure_time = \"D_obs\", t0 = 90,     tau = 14, newdata = newdata): could not find function \"predict_from_model_1\""},{"path":"https://ewu16.github.io/nomatchVE/reference/print.vefit.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for vaccine effectiveness fits — print.vefit","title":"Print method for vaccine effectiveness fits — print.vefit","text":"Prints concise summary vaccine effectiveness estimates fitted model.","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/print.vefit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for vaccine effectiveness fits — print.vefit","text":"","code":"# S3 method for class 'vefit' print(object, digits = 3, ...)"},{"path":"https://ewu16.github.io/nomatchVE/reference/print.vefit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for vaccine effectiveness fits — print.vefit","text":"object object class vefit created nomatchVE() matching_ve(). digits Integer indicating number decimal places display. Default 3. ... Additional arguments (currently ignored).","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/print.vefit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print method for vaccine effectiveness fits — print.vefit","text":"Invisibly returns input object object. Called primarily side effect printing summary console.","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/simdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated dataset — simdata","title":"Simulated dataset — simdata","text":"Minimal data set mimicking data observational vaccine study. Used apply/test methods.","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/simdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated dataset — simdata","text":"","code":"simdata"},{"path":[]},{"path":"https://ewu16.github.io/nomatchVE/reference/simdata.html","id":"simdata","dir":"Reference","previous_headings":"","what":"simdata","title":"Simulated dataset — simdata","text":"data frame 10,000 rows 7 columns: ID Subject identifier x1,x2 Covariates adjust V Indicator ever vaccinated follow-D_obs Day observed vaccination (relative d0) Y Time event days (relative d0) event Event indicator, event = 0 censored","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/simdata.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Simulated dataset — simdata","text":"Created code","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/summary.vefit.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary method for vaccine effectiveness fits — summary.vefit","title":"Summary method for vaccine effectiveness fits — summary.vefit","text":"Summarizes vaccine effectiveness estimates obtained displays cumulative incidence VE across evaluation time points.","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/summary.vefit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary method for vaccine effectiveness fits — summary.vefit","text":"","code":"# S3 method for class 'vefit' summary(object, digits = 4, ...)"},{"path":"https://ewu16.github.io/nomatchVE/reference/summary.vefit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary method for vaccine effectiveness fits — summary.vefit","text":"object object class vefit created nomatchVE() matching_ve(). digits Integer indicating number decimal places display. Default 4. ... Additional arguments (currently ignored).","code":""},{"path":"https://ewu16.github.io/nomatchVE/reference/summary.vefit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary method for vaccine effectiveness fits — summary.vefit","text":"Invisibly returns input object object. Called primarily side effect printing detailed summary console.","code":""}]
